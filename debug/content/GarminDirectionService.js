define(["collections/course/GarminRoutes","views/utils/LeafletMap/utils/Util","views/utils/LeafletMap/utils/MapUtil","views/utils/LeafletMap/MapServices/DirectionService"],function(e,t,n,r){var i=function(e){return r.call(this,e),this};return i.prototype=Object.create(r.prototype),i.prototype.constructor=i,i.prototype.updateTransitionMode=function(n){n.parent?n.parent==="cycling"&&n.value?this.transitMode=t.PopularityRouteTypes[n.value.toUpperCase()]||t.PopularityRouteTypes.ROAD_CYCLING:n.parent==="running"&&n.value&&(this.transitMode=t.PopularityRouteTypes[n.value.toUpperCase()]||t.PopularityRouteTypes.RUNNING):this.transitMode=t.PopularityRouteTypes.RUNNING},i.prototype.fetch=function(i,s){var o=new e({startLat:i.start[0],startLon:i.start[1],endLat:i.end[0],endLon:i.end[1],courseType:this.transitMode}),u=[],a=0,f,l,c;return o.fetch({success:function(e,r,o){if(i.success)if(o.xhr.status===200&&e){e.each(function(e){u.push([e.getLatitude(),e.getLongitude(),0,0])});for(f=0;f<e.models.length-1;f++)l=e.models[f],c=e.models[f+1],a+=n.calculateDistanceBetweenPointsInMeters(l.getLatitude(),l.getLongitude(),c.getLatitude(),c.getLongitude());i.success.call(s,{points:u,meters:a})}else o.xhr.status===204?i.error.call(s,o.xhr.statusText,o.xhr.status,t.ErrorCodes.GENERIC):i.error.call(s,o.xhr.statusText,o.xhr.status,t.ErrorCodes.GENERIC)},error:function(e,n){i.error&&i.error.call(s,n.statusText,n.status,t.ErrorCodes.GENERIC)}})},i});