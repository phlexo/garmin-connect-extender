define(["leaflet","utils/personalizer/ConversionFactors","geodesy_latlon_vector3d","geodesy_dms","geodesy_latlon_ellipsodial","geodesy_latlon_vincenty"],function(e,t){var n=function(){return this}();return n.MaxDistance=999,n.Radius={KILOMETERS:6371,MILES:3959},n.ZoomLevel={MAX:9,FAR:10,MEDIUM:12,CLOSE:13},n.LowestHeatmapZoomLevel=9,n.Layers={LAYER_DISTANCE_CLOSE:"distanceLayerClose",LAYER_DISTANCE_MEDIUM:"distanceLayerMedium",LAYER_DISTANCE_FAR:"distanceLayerFar",LAYER_DISTANCE_MAX:"distanceLayerMax",LAYER_MARKERS:"markerLayer",LAYER_POSITION:"positionLayer",POPULAR_AREAS:"POPULAR_AREAS",LAYER_ELEVATION_SELECTION:"elevationLayer",CUSTOM_POINT_LAYER:"CUSTOM_POINT_LAYER",LAYER_POLYLINE_OVERLAY:"polylineOverlayLayer",LAYER_TOOLTIP:"layerTooltip"},n.calculateBoundingBoxAreaInKM=function(t,n,r,i){var s=this.calculateDistanceBetweenPointsInKM(t,i,n,i),o=this.calculateDistanceBetweenPointsInKM(t,i,t,r),u=s*o;return u},n.calculateDistanceBetweenPointsInKM=function(n,r,i,s){var o=new LatLon(n,r),u=new LatLon(i,s);return o.distanceTo(u)*t.MetersToKm},n.calculateDistanceBetweenPointsInMeters=function(t,n,r,i){var s=new LatLon(t,n),o=new LatLon(r,i);return s.distanceTo(o)},n.calculateDistanceFromCollectionOfLatLngs=function(t){var n=0;if(t)for(var r=0,i=t.length;r<i;r+=1){var s=t[r],o=t[r+1];s&&o&&(n+=this.calculateDistanceBetweenPointsInMeters(s.lat,s.lng,o.lat,o.lng))}return n},n.calculateDestinationPoint=function(t,n,r){t=new LatLon(t.lat,t.lng);var i=t.destinationPoint(n,r);return{lat:i.lat,lng:i.lon}},n.calculateBearingOfPoints=function(e,t){var n=new LatLon(e.lat,e.lng),r=new LatLon(t.lat,t.lng);return n.finalBearingTo(r)},n.decodeLine=function(e){var t=0,n=[],r=0,i=0;if(e&&e!=undefined){var s=e.length;while(t<s){var o,u=0,a=0;do o=e.charCodeAt(t++)-63,a|=(o&31)<<u,u+=5;while(o>=32);var f=a&1?~(a>>1):a>>1;r+=f,u=0,a=0;do o=e.charCodeAt(t++)-63,a|=(o&31)<<u,u+=5;while(o>=32);var l=a&1?~(a>>1):a>>1;i+=l,n.push([r*1e-5,i*1e-5])}}return n},n.indexOfClosestPoint=function(t,n,r,i){var s=-1,o,u=this.truncateLatLng(n,r);if(t)if(t.length===2)s=1;else{for(o=0;o<t.length-1;o++){var a=this.truncateLatLng(t[o],r),f=this.truncateLatLng(t[o+1],r);if(this.isPointsEqual(a,u,r)||this.isPointsEqual(f,u,r)||e.polyline([a,f]).getBounds().contains(u)){s=o+1;break}}s===-1&&!i&&(r>2?s=this.indexOfClosestPoint(t,n,r-1):s=t.length-1)}return s},n.findPointOnPolyline=function(e,t,n,r,i){var s,o,u,a,f,l,c,h,p,d=e[n-1],v=e[n];return d.equals(t)?o=d:v.equals(t)?o=v:d.equals(v)?o=d:(u=r.latLngToPoint(d,i).x,a=r.latLngToPoint(d,i).y,f=r.latLngToPoint(v,i).x,l=r.latLngToPoint(v,i).y,c=r.latLngToPoint(t,i).x,h=r.latLngToPoint(t,i).y,p=((c-u)*(f-u)+(h-a)*(l-a))/(Math.pow(f-u,2)+Math.pow(l-a,2)),p>1?o=v:p<0?o=d:(s={x:u+p*(f-u),y:a+p*(l-a)},o=r.pointToLatLng(s,i))),o.wrap()},n.isPointsEqual=function(e,t,n){return this.roundPointToSpecified(e.lat,n)===this.roundPointToSpecified(t.lat,n)&&this.roundPointToSpecified(e.lng,n)===this.roundPointToSpecified(t.lng,n)},n.truncateLatLng=function(t,n){return e.latLng(this.roundPointToSpecified(t.lat,n),this.roundPointToSpecified(t.lng,n))},n.roundPointToSpecified=function(t,n){return Math.round(Math.pow(10,n)*t)/Math.pow(10,n)},n});