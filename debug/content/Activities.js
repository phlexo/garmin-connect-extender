/**
 * @filename GarminMapControls.js
 *
 * @description Controller for map functions.
 *
 * @author Steve Mitchell
 * @email steve.mitchell@garmin.com
 *
 * Copyright(c) 2011, Garmin International
 */

define("widgets/activity/states/SmallState",["underscore","backbone","views/main/WidgetStateView","utils/NavigationUtil","text!templates/main/Widget/SmallWidgetContent.html"],function(e,t,n,r,i){var s=n.extend({titleKeyName:"title_activities_widget_list",menuKeyName:"title_widget_small",headerUrl:"/activities",name:"recentActivity",stateClassName:"widget widget-small",templateHtml:i,noDataTemplateHtml:i,showFooter:!1,showHeaderTitle:!1,menuGroups:[{groupName:"activityMenu",menuItems:[]}],maxPage:function(){return 0},numLoadedPages:function(){return 1},provideModels:function(){return{classIconName:"icon-activities"}}});return s}),define("models/activity/ActivityPolyline",["backbone"],function(e){var t=e.Model.extend({url:function(){return"/proxy/activity-service/activity/polyline/"+this.get("activityId")},idAttribute:"activityId"});return t}),define("models/activity/ActivityDetails",["underscore","backbone"],function(e,t){var n=t.Model.extend({url:function(){return this.isLapSwimming?"/proxy/activity-service/activity/"+this.get("activityId")+"/swimDetails?maxChartSize="+this.maxChartSize:"/proxy/activity-service/activity/"+this.get("activityId")+"/details?maxChartSize="+this.maxChartSize+"&maxPolylineSize="+this.maxPolylineSize},initialize:function(e){this.maxChartSize=e.maxChartSize||500,this.maxPolylineSize=e.maxPolylineSize||1e3,this.isLapSwimming=e.isLapSwimming||!1},setIsLapSwimming:function(e){this.isLapSwimming=e},isValid:function(){return typeof this.get("sumDuration")!="undefined"},parse:function(t){var n=[],r=t.metricDescriptors,i=t.activityDetailMetrics;if(!i||i.length==0)return null;for(var s=0;s<i[0].metrics.length;s++)n[s]=[];for(var o=0;o<i.length;o++){var u=i[o].metrics;for(var a=0;a<u.length;a++)n[a][o]=u[a]}var f={};f.original=e.clone(t),e.each(r,function(e){f[e.key]=n[e.metricsIndex]},this);if(this.isLapSwimming){var l=f.sumDuration[0],c;f.cumulativeDuration=e.clone(f.sumDuration);var h=f.cumulativeDuration;h[0]=0;for(o=1;o<h.length;o++){var p=h[o];h[o]=l+h[o-1],l=p}l+=h[h.length-1],h.push(l),f.sumStrokes=f.sumStrokes.concat(e.last(f.sumStrokes)),c=e.last(f.weightedMeanSpeed),c&&f.weightedMeanSpeed.push(c),c=e.last(f.weightedMeanSwolf),c&&f.weightedMeanSwolf.push(c),c=e.last(f.directLengthIndex),c&&f.directLengthIndex.push(c+1);var d=f.sumDistance[0];f.cumulativeDistance=e.clone(f.sumDistance),h=f.cumulativeDistance,h[0]=0;for(o=1;o<h.length;o++){var v=h[o];h[o]=d+h[o-1],d=v}if(f.weightedMeanSpeed){h=f.weightedMeanSpeed;for(o=0;o<h.length;o++)h[o]=h[o]*.0277777778}if(f.weightedMeanSwolf)for(var o=0,m=f.weightedMeanSwolf.length;o<m;o+=1)f.weightedMeanSwolf[o]===null&&(f.weightedMeanSwolf[o]=0);if(f.sumStrokes)for(var o=0,m=f.sumStrokes.length;o<m;o+=1)f.sumStrokes[o]===null&&(f.sumStrokes[o]=0);var g=t.heartRateDTOs;if(g&&g.length){o=g.length-1;while(g[o].duration>l)g.pop(),o--;f.directHeartRate=e.map(g,function(e){return e.bpm}),f.interpolatedSwimDuration=e.map(g,function(e){return e.duration}),f.interpolatedSwimLengths=[],f.interpolatedSwimDistance=[],this.calculateInterpolatedValues(f,g,this.interpolateSwimLength),this.calculateInterpolatedValues(f,g,this.interpolateSwimDistance)}}return t.geoPolylineDTO&&t.geoPolylineDTO.polyline&&(f.polyline=t.geoPolylineDTO.polyline),f},calculateInterpolatedValues:function(e,t,n){var r=[],i=0,s=e.cumulativeDuration[1],o=null,u=0;while(u<t.length)o=t[u],o.duration<=s?(r.push(o.bpm),u++):(n(i,r,e),i++,s=e.cumulativeDuration[i+1],r=[]);r.length&&n(i,r,e)},interpolateSwimLength:function(e,t,n){var r=1/t.length;for(var i=1;i<=t.length;i++)n.interpolatedSwimLengths.push(e+i*r)},interpolateSwimDistance:function(e,t,n){var r=n.sumDistance[e],i=n.cumulativeDistance[e],s=r/t.length;for(var o=1;o<=t.length;o++)n.interpolatedSwimDistance.push(i+o*s)},hasData:function(e){return!!this.get(e)},getData:function(t,n,r,i){n||(n="sumDuration");var s=this.get(t),o=this.get(n);if(!s||!o)return null;s.length!=o.length&&console.log("Number of datapoints for elevation and timestamps do not match!");var u=Math.min(s.length,o.length);r||(r=e.identity),i||(i=e.identity);var a=[],f=0;for(var l=0;l<u;l++)o[l]!==null&&(a[f]=[i(o[l]),r(s[l])],f++);return a},getElevationData:function(e,t,n){return this.getData("directElevation",e,t,n)},getHRData:function(e,t,n){return this.getData("directHeartRate",e,t,n)},getSpeedData:function(e,t,n){return this.getData("directSpeed",e,t,n)},getPowerData:function(e,t,n){return this.getData("directPower",e,t,n)},getCadenceData:function(e,t,n){return this.getData("directBikeCadence",e,t,n)||this.getData("directDoubleCadence",e,t,n)||this.getData("directSwimCadence",e,t,n)},getTemperatureData:function(e,t,n){return this.getData("directAirTemperature",e,t,n)},getLeftRightBalanceData:function(e,t,n){return this.getData("directRightBalance",e,t,n)},getVerticalOscillationData:function(e,t,n){return this.getData("directVerticalOscillation",e,t,n)},getGroundContactTimeData:function(e,t,n){return this.getData("directGroundContactTime",e,t,n)},getSwimSpeedData:function(e,t,n){return this.isLapSwimming?this.getData("weightedMeanSpeed",e,t,n):this.getData("directSpeed",e,t,n)},getSwimStrokeData:function(e,t,n){return this.getData("sumStrokes",e,t,n)},getSwimSwolfData:function(e,t,n){return this.getData("weightedMeanSwolf",e,t,n)},getSwimLengthData:function(e,t,n){return this.getData("sumDuration",e,t,n)},getDiveDepthData:function(e,t,n){return this.getData("directDepth",e,t,n)},getDiveDecoData:function(e,t,n){return this.getData("directNextStopDepth",e,t,n)},getConnectIQMeasurements:function(){return e.filter(this.get("original").metricDescriptors,function(e){return e.hasOwnProperty("appID")})},hasPowerData:function(){var t=this.get("directPower");return!e.isUndefined(t)&&t!=null&&t.length>0},hasElevationData:function(){var t=this.get("directElevation");return!e.isUndefined(t)&&t!=null&&t.length>0},hasLongitudeData:function(){var t=this.get("directLongitude");return!e.isUndefined(t)&&t!=null&&t.length>0},hasLatitudeData:function(){var t=this.get("directLatitude");return!e.isUndefined(t)&&t!=null&&t.length>0},hasGForceData:function(){var t=this.get("directGforce");return!e.isUndefined(t)&&t!=null&&t.length>0}});return n}),define("models/activity/ActivitySummary",["backbone","utils/date/DateParser","utils/date/DateFormatter"],function(e,t,n){var r=e.Model.extend({idAttribute:"activityId",urlRoot:"/proxy/activity-service/activity",initialize:function(){},sync:function(t,n,r){t=="update"&&(this.isParentActivity()?n.unset("activityTypeDTO"):this.isChildActivity()&&(n.unset("accessControlRuleDTO"),n.unset("eventTypeDTO"),n.unset("timeZoneUnitDTO"),n.unset("description"),n.unset("activityName"),delete n.attributes.summaryDTO.startTimeGMT)),e.sync.call(this,t,n,r)},toSummarizedActivityJSON:function(){var e=this.get("metadataDTO"),r=this.get("summaryDTO");return{activityId:this.get("activityId"),activityName:this.get("activityName"),activityType:this.get("activityTypeDTO"),autoCalcCalories:e.autoCalcCalories,averageSpeed:r.averageSpeed,calories:r.calories,comments:null,conversationPk:null,conversationUuid:null,courseId:e.associatedCourseId,description:this.get("description"),distance:r.distance,duration:r.duration,elevationGain:r.elevationGain,elevationLoss:r.elevationLoss,eventType:this.get("eventTypeDTO"),favorite:e.favorite,ownerDisplayName:e.userInfoDto.displayname,ownerId:e.userInfoDto.userProfilePk,ownerProfileImageUrlSmall:e.userInfoDto.profileImageUrlSmall,parent:this.get("isMultiSportParent"),privacy:this.get("accessControlRuleDTO"),startTimeGMT:n.formatMBTimestamp(t.parseISOUTC(r.startTimeGMT)),startTimeLocal:n.formatMBTimestamp(t.parseISO(r.startTimeLocal))}},isNonMultiSportActivity:function(){return this.isParentActivity()==0&&this.isChildActivity()==0},isParentActivity:function(){return this.isNullOrEmpty(this.get("isMultiSportParent"))==0&&this.get("isMultiSportParent")==1},isChildActivity:function(){return this.isNullOrEmpty(this.get("parentId"))==0},isNullOrEmpty:function(e){return typeof e=="undefined"||e==null},getOwnerId:function(){return this.get("metadataDTO").userInfoDto.userProfilePk},getFloorsClimbed:function(){return this.get("summaryDTO").floorsClimbed||0},getFloorsDescended:function(){return this.get("summaryDTO").floorsDescended||0},getFloorsClimbedMaxSpeed:function(){return this.get("summaryDTO").maxVerticalSpeed}});return r}),define("models/activity/SummarizedActivity",["backbone"],function(e){var t=.044704,n=e.Model.extend({urlRoot:"/modern/activityservice/activity/",idAttribute:"activityId",initialize:function(){this.validateFields(),this.bind("change:duration",this.validateFields,this),this.bind("change:distance",this.validateFields,this)},validateFields:function(){var e=this.get("duration"),n=this.get("distance");if(!e||!n)this.set("averageSpeed",0);else{var r=Math.max(n/e,t);this.set("averageSpeed",r)}this.setEmptyStringIfNull("activityName"),this.setEmptyStringIfNull("description")},setEmptyStringIfNull:function(e){var t=this.get(e);(t==null||typeof this.get("activityName")=="undefined")&&this.set(e,"")}});return n}),define("models/segments/SegmentOptionalFeature",["backbone"],function(e){var t=e.Model.extend({idAttribute:"userOptionalFeaturePK",url:function(){var e="/proxy/userprofile-service/userprofile/optional-feature/segment-leaderboard/";return this.hasChanged("userOptionType")&&(e+=this.mapUserOptionType()),e+=this.displayName},initialize:function(e){this.displayName=e.displayName;if(!this.displayName)throw"displayName required for SegmentOptionalFeature"},isOptedIn:function(){return this.get("userOptionType")==="OPT_IN"},mapUserOptionType:function(){var e;return this.get("userOptionType")==="OPT_IN"?e="opt-in/":e="opt-out/",e}});return t}),define("models/user/UserMapSetting",["models/user/UserPreference"],function(e){var t=e.extend({defaults:{mapType:"road",terrain:!1,trails:!1,labels:!0,HeatMapsRunning:!1,HeatMapsCycling:!1},parse:function(e){return JSON.parse(e.value)},toJSON:function(){return{key:this.id,value:JSON.stringify(this.attributes)}},getMapType:function(e){return this.get("mapType",e)},getTerrain:function(e){return this.get("terrain",e)},getTrails:function(e){return this.get("trails",e)},getLabels:function(e){return this.get("labels",e)},getHeatMapsRunning:function(e){return this.get("HeatMapsRunning",e)},getHeatMapsCycling:function(e){return this.get("HeatMapsCycling",e)},setMapType:function(e){this.set("mapType",e)},setTerrain:function(e){this.set("terrain",e)},setTrails:function(e){this.set("trails",e)},setLabels:function(e){this.set("labels",e)},setHeatMapsRunning:function(e){this.set("HeatMapsRunning",e)},setHeatMapsCycling:function(e){this.set("HeatMapsCycling",e)}});return t}),define("models/activity/ActivityCount",["backbone"],function(e){return e.Model.extend({url:function(){return"/proxy/activitylist-service/activities/count"}})}),define("models/activity/RepCountingActivity",["require","underscore","backbone","personalizer"],function(e){var t=e("underscore"),n=e("backbone"),r=e("personalizer"),i=24.9999999999,s={SAVE_SUCCSS:"SAVE_SUCCESS",SAVE_ERROR:"SAVE_ERROR"},o=n.Model.extend({idAttribute:"activityId",url:function(){return"/modern/proxy/activity-service/activity/"+this.activityId+"/exerciseSets"},initialize:function(e){if(typeof e.activityId=="undefined")throw"RepCountingActivity requires an activity ID";this.activityId=e.activityId},getTotalTime:function(){var e=this.get("exerciseSets"),t=0;if(e)for(var n=0,r=e.length;n<r;n++)t+=e[n].duration;return t},getWorkTime:function(){var e=this.get("exerciseSets"),t=0;if(e)for(var n=0,r=e.length;n<r;n++)e[n].setType!=="REST"&&(t+=e[n].duration);return t},getRestTime:function(){var e=this.get("exerciseSets"),t=0;if(e)for(var n=0,r=e.length;n<r;n++)e[n].setType==="REST"&&(t+=e[n].duration);return t},getActiveSetCount:function(){var e=this.get("exerciseSets"),t=0;if(e)for(var n=0,r=e.length;n<r;n++)e[n].setType!=="REST"&&t++;else t+=1;return t},getTotalRepCount:function(){var e=this.get("exerciseSets"),t=0;if(e)for(var n=0,r=e.length;n<r;n++)e[n].setType!=="REST"&&(t+=e[n].repetitionCount);return t},getTotalVolume:function(){var e=this.get("exerciseSets"),t=0,n;if(e)for(var r=0,i=e.length;r<i;r++)n=e[r],n.setType!=="REST"&&n.weight>0&&(t+=n.weight*n.repetitionCount);return t},getConsolidatedJSON:function(){var e=this.get("exerciseSets"),n=0,r=[],i=this;return t.each(e,function(e){e.setType==="REST"?(r[r.length-1].rest||(r[r.length-1].rest=0),r[r.length-1].rest+=e.duration):(e.exerciseType=i.getExerciseType(e.exercises),r.push(e))}),r},getExerciseType:function(e){var n="choose_an_exercise",r=0;return e&&e.length>0&&t.each(e,function(e){e.probability>r&&(r=e.probability,e.name?n=e.name:e.category!=="UNKNOWN"?n=null:e.category==="UNKNOWN"&&(r=i))}),n},getEmptySetJSON:function(e){return{startTimeGMT:"",duration:e?e:"",exerciseType:"choose_an_exercise",repCount:"",weight:"",exercises:[],rest:""}},splitEditResults:function(e){var n=[],r=null;for(var i=0;i<e.length;i++)!t.isUndefined(e[i].rest)&&e[i].rest!==0?(r=this.createRestSet(e[i].rest),delete e[i].rest):(r=null,delete e[i].rest),n.push(e[i]),r&&n.push(r);this.set({exerciseSets:n}),this.once("sync",this.saveSuccess,this),this.once("error",this.saveError,this),this.save()},createRestSet:function(e){return{setType:"REST",duration:e,exercises:[],repetitionCount:null,weight:-1,startTime:null}},saveSuccess:function(){this.trigger(s.SAVE_SUCCSS),this.off("error")},saveError:function(){this.trigger(s.SAVE_ERROR),this.off("sync")}});return o.UNKNOWN_PROBABILITY_OVERRIDE=i,o.Events=s,o}),define("collections/activity/Activities",["backbone","models/activity/Activity"],function(e,t){var n=!1,r={NO_MORE_ACTIVITIES:"NO_MORE_ACTIVITIES",ACTIVITIES_FETCHED:"ACTIVITIES_FETCHED"},i=e.Collection.extend({model:t,initialize:function(e,t){this.initializeBaseCollection(e,t)},initializeBaseCollection:function(e,t){this.pollStartTime=null,this.pollingEnabled=!0,this.fetching=!1,this.maxCount=t.maxCount,this.fetchSize=t.fetchSize,this.startIndex=t.startIndex,this.startIndex||(this.startIndex=1),this.mayHaveMoreModels=!0,this.comparator=function(e){var t=e.get("startTimeGMT");return typeof t!="undefined"&&t!=null?-Date.parse(t):-9999999999}},fetch:function(t){if(typeof t=="undefined"||t==null)t={};return t.cache=!1,this.log("Activities.fetch("+JSON.stringify(t)+")"),this.log("Activities.fetch "+this.url()),e.Collection.prototype.fetch.call(this,t)},parse:function(e,t){return this.requestorRelationship=e.requestorRelationship,this.length+e.activityList.length<this.startIndex+this.fetchSize-1&&(this.mayHaveMoreModels=!1,this.trigger(r.NO_MORE_ACTIVITIES)),e.activityList},getDisplayName:function(){return this.displayName},poll:function(){if(!this.fetching){this.log("Activities.poll()"),this.fetching=!0,this.length>0?this.pollStartTime=this.first().get("startTimeGMT"):this.pollStartTime=null;var e=this;this.fetch({add:!0,success:function(e){e.fetching=!1},error:e.onPollingError})}},onPollingError:function(e,t){e.fetching=!1,e.pollingEnabled=!1,typeof console!="undefined"&&typeof console.log!="undefined"&&console.log((new Date).toString()+" - "+"Error polling: "+t.status+" "+t.statusText)},isPollingEnabled:function(){return this.pollingEnabled},fetchMore:function(){this.pollStartTime=null;if(!this.fetching){this.fetching=!0,this.startIndex+=this.fetchSize;if(this.startIndex>this.maxCount){this.trigger(r.NO_MORE_ACTIVITIES);return}this.startIndex+this.fetchSize-1>this.maxCount&&(this.fetchSize=this.maxCount-this.startIndex+1);var e=this;this.log("Activities.fetchMore()"),this.fetch({add:!0,remove:!1,success:e.onFetchMoreSuccess,error:e.onFetchMoreError})}},onFetchMoreSuccess:function(e,t){e.fetching=!1,e.trigger(r.ACTIVITIES_FETCHED),e.length<e.startIndex+e.fetchSize-1&&(e.mayHaveMoreModels=!1,e.trigger(r.NO_MORE_ACTIVITIES))},onFetchMoreError:function(e,t){e.fetching=!1,typeof console!="undefined"&&typeof console.log!="undefined"&&console.log((new Date).toString()+" - "+"fetching more: "+t.status+" "+t.statusText)},log:function(e){n&&typeof console!="undefined"&&typeof console.log!="undefined"&&console.log((new Date).toString()+" - "+e)}});return i.Events=r,i}),define("collections/profile/UserProfileActivities",["collections/activity/Activities"],function(e){var t=e.extend({url:function(){var e;return this.dataFilter=="filterByFavorites"?"/proxy/activitylist-service/activities/favorite/"+this.getDisplayName()+"?limit=5":(this.dataFilter=="filterBySubscriptions"?(e="/proxy/activitylist-service/activities/comments/subscriptionFeed",this.pollStartTime!=null?e+="?start=1&date="+encodeURIComponent(this.pollStartTime):e+="?start="+this.startIndex):e="/proxy/activitylist-service/activities/"+this.getDisplayName()+"?start="+this.startIndex,this.fetchSize&&(e+="&limit="+this.fetchSize),e)},initialize:function(e,t){this.initializeBaseCollection(e,t);if(typeof t.displayName=="undefined")throw"Invalid displayName in Activities Collection.";this.displayName=t.displayName,typeof t.dataFilter=="undefined"?this.dataFilter=null:this.dataFilter=t.dataFilter}});return t}),define("models/activity/EventType",["backbone"],function(e){var t=e.Model.extend({initialize:function(){}});return t}),define("collections/activity/EventTypes",["require","backbone","localizer","models/activity/EventType"],function(e){var t=e("backbone"),n=e("localizer"),r=e("models/activity/EventType"),i=t.Collection.extend({model:r,url:"/proxy/activity-service/activity/eventTypes",findByTypeId:function(e){return this.find(function(t){return e==t.get("typeId")})},findByTypeKey:function(e){return this.find(function(t){return e==t.get("typeKey")})},toJSON:function(){var e=t.Collection.prototype.toJSON.apply(this,arguments);return _.reject(e,function(e){return e.typeKey=="all"})},comparator:function(e,t){return n.localize(e.get("typeKey")).toLowerCase().localeCompare(n.localize(t.get("typeKey")).toLowerCase())}});return i}),define("collections/activity/ActivityChildren",["backbone","models/activity/Activity"],function(e,t){var n=e.Collection.extend({model:t,url:function(){var e="/proxy/activitylist-service/activities/"+this.parentActivityId+"/children";return e},initialize:function(e,t){t.verb="GET",this.parentActivityId=t.parentActivityId},parse:function(e,t){return this.requestorRelationship=e.requestorRelationship,e.activityList}});return n}),define("models/segments/SegmentResult",["backbone"],function(e){var t=e.Model.extend({idAttribute:"segmentPk",urlRoot:"/proxy/course-service/segment/user/"});return t}),define("collections/segments/SegmentResultsByActivityId",["backbone","models/segments/SegmentResult"],function(e,t){var n=e.Collection.extend({model:t,url:function(){return"/proxy/course-service/segment/list/"+this.activityId},initialize:function(e,t){if(typeof t.activityId=="undefined")throw"SegmentResultsByActvityId requires an activity ID";this.activityId=t.activityId},comparator:function(e){return e.get("timeEnteredSegment")},findByUuid:function(e){return this.find(function(t){return t.get("segmentUuid")==e})}});return n}),define("collections/gear_tracking/GearTypes",["backbone"],function(e){var t={BIKE:"gear_type_bike",SHOES:"gear_type_shoes",OTHER:"gear_type_other","GOLF CLUBS":"gear_type_golf_clubs"},n=function(e){return t[e.toUpperCase()]},r=function(e,t,n,r){var i=e;if(i&&i.models.length>0){if(!r){var s=_.find(i.models,function(e){return e.get("gearTypeName")==="Golf Clubs"});s&&i.remove(s)}if(!t&&!n){var o=_.filter(i.models,function(e){var t=e.get("gearTypeName");return t==="Shoes"||t==="Bike"||t==="Other"});if(o&&o.length>0)for(var u=0;u<o.length;u+=1)o[u]&&i.remove(o[u])}}return i.toJSON()},i=e.Collection.extend({url:function(){return"/proxy/gear-service/gear/types"},comparator:function(e,t){var n=99;switch(e.get("gearTypeName")){case"Shoes":n=0;break;case"Bike":n=1;break;case"Golf Clubs":n=3;break;case"Other":n=99}var r=99;switch(t.get("gearTypeName")){case"Shoes":r=0;break;case"Bike":r=1;break;case"Golf Clubs":r=3;break;case"Other":r=99}return n<r?-1:n>r?1:0}});return i.getLocalizedMappingByGearTypeName=n,i.getGearTypesByRoles=r,i}),define("constants/map/map",[],function(){return{googleUrl:"//maps.googleapis.com/maps/api/js?sensor=true&language=en",bingUrl:"//www.bing.com/api/maps/mapcontrol?",bingKey:"Ap2JFqRZ9EGzgwQpDhaon-rszEMQ-g0n2sgyxhwelmoRlwFR91ImOd8YTaEFsJn3",baiduUrl:"https://sapi.map.baidu.com/api?v=2.0&ak=KQMz9KcIzBwWNUgbHWUHZGSD&s=1&callback=initializeBaidu",baiduKey:"KQMz9KcIzBwWNUgbHWUHZGSD",HereAppCode:"D7pWNLGdZbuU0ReUY4A85g",HereAppId:"hYaBOISjlUD2egn6d3AT"}}),define("text!templates/sharing/EmbedModalPopupView.html",[],function(){return'<input\n        type="text"\n        value="&lt;iframe src=\'<%= NavUtil.getHostUrl() + NavUtil.url(\'/activity/embed/\' + activityId) %>\' title=\'<%= activityName %>\' width=\'465\' height=\'<%= height %>\' frameborder=\'0\'&gt;&lt;/iframe&gt;"\n        class="embed-activity-input"\n        onclick="this.focus();this.select()"\n        readonly="readonly">\n\n<iframe\n        class="embed-activity-iframe"\n        width="465"\n        height="<%= height %>"\n        title="<%= activityName %>"\n        frameborder="0"\n        src="<%= NavUtil.getHostUrl() + NavUtil.url(\'/activity/embed/\' + activityId) %>">\n</iframe>'}),define("views/sharing/EmbedModalPopupView",["underscore","backbone","localizer","utils/NavigationUtil","text!templates/sharing/EmbedModalPopupView.html"],function(e,t,n,r,i){return t.View.extend({template:e.template(i),initialize:function(e){return this.activityId=e.activityId,this.hasMap=e.hasMap,this.calculateHeight(e.noOfChildren),this.activityName=e.activityName,this},render:function(){return this.$el.html(this.template({NavUtil:r,height:this.height,activityId:this.activityId,activityName:this.getActivityName()})),this},getActivityName:function(){var e=n.localize("untitled");return this.activityName&&(e=this.activityName.replace(/"/g,"&quot;").replace(/'/g,"&#39;")),e},calculateHeight:function(e){var t=this.hasMap||!1,n=230,r=500;if(e===0){this.height=t?r:r-n;return}for(var i=0;i<e;i+=1)i===0?r+=26:r+=18;this.height=t?r:r-(n-11)}})}),define("text!templates/sharing/ShareStaticMapImageView.html",[],function(){return'<button class="dropdown-trigger" data-toggle="dropdown">\n    <i class="icon-share"/>\n</button>\n<ul class="dropdown-menu pull-right <%= directionClass %>">\n    <% if (showIcon) { %>\n    <li class="clearfix">\n        <i class="icon-share pull-right"></i>\n    </li>\n    <% } %> <% if (\'zh_CN\' == locale) { %>\n    <li>\n        <a class="addthis_button_baidu"><%= Localizer.localize(\'share_baidu\') %></a>\n    </li>\n    <li>\n        <a id="shareToWeiboFromShareStaticMapImageView" class="" title="Sina Weibo">\n            <span class=" at300bs at15nc at15t_sinaweibo" style="float: left; margin: 2px 8px 0 0;">\n                <span class="at_a11y" style="float: left; margin: 2px 8px 0 0;">Share on sinaweibo</span>\n            </span>\n            <%= Localizer.localize(\'share_sinaweibo\') %>\n        </a>\n    </li>\n    <li>\n        <a class="addthis_button_qzone"><%= Localizer.localize(\'share_qzone\') %></a>\n    </li>\n    <li>\n        <a id="shareToFacebookFromShareStaticMapImageView" class="at300b" title="<%= Localizer.localize(\'share_on_facebook\') %>" href="#">\n            <span class="at-icon-wrapper"\n                  style="line-height: 16px; height: 16px; width: 16px; background-color: rgb(59, 89, 152);">\n                <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 32 32"\n                     class="at-icon at-icon-facebook" style="width: 16px; height: 16px;">\n                    <g>\n                    <path\n                            d="M22 5.16c-.406-.054-1.806-.16-3.43-.16-3.4 0-5.733 1.825-5.733 5.17v2.882H9v3.913h3.837V27h4.604V16.965h3.823l.587-3.913h-4.41v-2.5c0-1.123.347-1.903 2.198-1.903H22V5.16z"\n                            fill-rule="evenodd"></path></g></svg>\n            </span>\n            Facebook\n        </a>\n    </li>\n    <li>\n        <a id="shareToTwitterFromShareStaticMapImageView" class="at300b" title="<%= Localizer.localize(\'share_on_twitter\') %>" href="#">\n            <span class="at-icon-wrapper"\n                  style="line-height: 16px; height: 16px; width: 16px; background-color: rgb(29, 161, 242);">\n                <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 32 32"\n                     class="at-icon at-icon-twitter" style="width: 16px; height: 16px;">\n                    <g>\n                    <path\n                            d="M27.996 10.116c-.81.36-1.68.602-2.592.71a4.526 4.526 0 0 0 1.984-2.496 9.037 9.037 0 0 1-2.866 1.095 4.513 4.513 0 0 0-7.69 4.116 12.81 12.81 0 0 1-9.3-4.715 4.49 4.49 0 0 0-.612 2.27 4.51 4.51 0 0 0 2.008 3.755 4.495 4.495 0 0 1-2.044-.564v.057a4.515 4.515 0 0 0 3.62 4.425 4.52 4.52 0 0 1-2.04.077 4.517 4.517 0 0 0 4.217 3.134 9.055 9.055 0 0 1-5.604 1.93A9.18 9.18 0 0 1 6 23.85a12.773 12.773 0 0 0 6.918 2.027c8.3 0 12.84-6.876 12.84-12.84 0-.195-.005-.39-.014-.583a9.172 9.172 0 0 0 2.252-2.336"\n                            fill-rule="evenodd"></path></g></svg>\n            </span>\n            Twitter\n        </a>\n    </li>\n    <li>\n        <a class="addthis_button_email"><%= Localizer.localize(\'share_email\') %></a>\n    </li>\n    <li>\n        <a class="addthis_button_compact"><%= Localizer.localize(\'share_more\') %></a>\n    </li>\n    <% } else { %>\n\n    <li>\n        <a id="shareToFacebookFromShareStaticMapImageView" class="at300b" title="<%= Localizer.localize(\'share_on_facebook\') %>" href="#">\n            <span class="at-icon-wrapper"\n                  style="line-height: 16px; height: 16px; width: 16px; background-color: rgb(59, 89, 152);">\n                <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 32 32"\n                     class="at-icon at-icon-facebook" style="width: 16px; height: 16px;">\n                    <g>\n                    <path\n                            d="M22 5.16c-.406-.054-1.806-.16-3.43-.16-3.4 0-5.733 1.825-5.733 5.17v2.882H9v3.913h3.837V27h4.604V16.965h3.823l.587-3.913h-4.41v-2.5c0-1.123.347-1.903 2.198-1.903H22V5.16z"\n                            fill-rule="evenodd"></path></g></svg>\n            </span>\n            Facebook\n        </a>\n    </li>\n    <li>\n        <a id="shareToTwitterFromShareStaticMapImageView" class="at300b" title="<%= Localizer.localize(\'share_on_twitter\') %>" href="#">\n            <span class="at-icon-wrapper"\n                  style="line-height: 16px; height: 16px; width: 16px; background-color: rgb(29, 161, 242);">\n                <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 32 32"\n                     class="at-icon at-icon-twitter" style="width: 16px; height: 16px;">\n                    <g>\n                    <path\n                            d="M27.996 10.116c-.81.36-1.68.602-2.592.71a4.526 4.526 0 0 0 1.984-2.496 9.037 9.037 0 0 1-2.866 1.095 4.513 4.513 0 0 0-7.69 4.116 12.81 12.81 0 0 1-9.3-4.715 4.49 4.49 0 0 0-.612 2.27 4.51 4.51 0 0 0 2.008 3.755 4.495 4.495 0 0 1-2.044-.564v.057a4.515 4.515 0 0 0 3.62 4.425 4.52 4.52 0 0 1-2.04.077 4.517 4.517 0 0 0 4.217 3.134 9.055 9.055 0 0 1-5.604 1.93A9.18 9.18 0 0 1 6 23.85a12.773 12.773 0 0 0 6.918 2.027c8.3 0 12.84-6.876 12.84-12.84 0-.195-.005-.39-.014-.583a9.172 9.172 0 0 0 2.252-2.336"\n                            fill-rule="evenodd"></path></g></svg>\n            </span>\n            Twitter\n        </a>\n    </li>\n    <li>\n        <a class="addthis_button_email at300b" target="_blank" title="<%= Localizer.localize(\'share_email\') %>"\n           href="#">\n            <span class="at-icon-wrapper"\n                  style="line-height: 16px; height: 16px; width: 16px; background-color: rgb(132, 132, 132);">\n                <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 32 32"\n                     class="at-icon at-icon-email" style="width: 16px; height: 16px;">\n                    <g>\n                    <g fill-rule="evenodd"></g>\n                    <path\n                            d="M27 22.757c0 1.24-.988 2.243-2.19 2.243H7.19C5.98 25 5 23.994 5 22.757V13.67c0-.556.39-.773.855-.496l8.78 5.238c.782.467 1.95.467 2.73 0l8.78-5.238c.472-.28.855-.063.855.495v9.087z"></path>\n                    <path\n                            d="M27 9.243C27 8.006 26.02 7 24.81 7H7.19C5.988 7 5 8.004 5 9.243v.465c0 .554.385 1.232.857 1.514l9.61 5.733c.267.16.8.16 1.067 0l9.61-5.733c.473-.283.856-.96.856-1.514v-.465z"></path></g></svg>\n            </span>\n            <%= Localizer.localize(\'share_email\') %>\n        </a>\n    </li>\n    <li>\n        <a class="addthis_button_expanded at300m" href="#" target="_blank" title="View more services">\n            <span class="at-icon-wrapper"\n                  style="line-height: 16px; height: 16px; width: 16px; background-color: rgb(255, 101, 80);">\n                <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 32 32"\n                     title="Expanded" alt="Expanded"\n                     class="at-icon at-icon-addthis" style="width: 16px; height: 16px;">\n                    <g>\n                    <path d="M18 14V8h-4v6H8v4h6v6h4v-6h6v-4h-6z" fill-rule="evenodd"></path></g></svg>\n            </span>\n            <%= Localizer.localize(\'share_more\') %>\n        </a>\n    </li>\n    <% } %>\n    <li class="divider"></li>\n    <li>\n        <a id="activity-detail-embed" href="#" data-toggle="modal"><%= Localizer.localize(\'embed\') %></a>\n    </li>\n</ul>\n'});if(Garmin==undefined)var Garmin={};Garmin.Map==undefined&&(Garmin.Map={}),Garmin.Map.ProviderFactory=function(e){if(typeof e=="undefined")throw new Error("config is required");if(typeof e.bingUrl=="undefined"||e.bingUrl.length==0)throw new Error("config.bingUrl is required");if(typeof e.googleUrl=="undefined"||e.googleUrl.length==0)throw new Error("config.googleUrl is required");if(typeof e.nuMapUrl=="undefined"||e.nuMapUrl.length==0||e.locale!="zh_TW")e.disableNuMap=!0;if(typeof e.baiduUrl=="undefined"||e.baiduUrl.length==0||e.locale!="zh_TW"&&e.locale!="zh_CN")e.disableBaidu=!0;this.settingsClient=null,this.config=e,typeof e.mapContainerId!="undefined"&&(this.config.mapContainer=e.mapContainerId),typeof this.config.mapContainer=="undefined"&&(this.config.mapContainer="map_container")},Garmin.Map.ProviderFactory.prototype={getCurrentMapContainerId:function(){return this.config.mapContainer},getMapControlsDiv:function(){return jQuery("#"+this.getCurrentMapContainerId()).parent()},getSettingsClient:function(){return this.settingsClient==null&&typeof Garmin.service!="undefined"&&(this.settingsClient=new Garmin.service.settingsClient),this.settingsClient},setOnloadHandler:function(e){this.onloadHandler=e},onload:function(){typeof this.onloadHandler!="undefined"&&this.onloadHandler!=null&&this.onloadHandler(),jQuery("#map_container").trigger("mapProviderSwitched")},initializeDataMembers:function(){this.mapProviders=[],this.onloadHandler=null,this.bingLoaded=!0,this.googleLoaded=!0,this.osmLoaded=!0,this.nuMapLoaded=!1,this.baiduLoaded=!1},create:function(e){this.initializeDataMembers();if(typeof e=="undefined")throw new Error("callback is required");this.setOnloadHandler(e);if(typeof this.config=="undefined")throw new Error("config is required");this.config.providerSwitched=!1,typeof this.config.heatmapsHidden=="undefined"&&(this.config.heatmapsHidden=!1);var t=this;if(typeof this.config.forceMapProvider=="undefined"&&typeof this.config.authenticated!="undefined"&&this.config.authenticated==1)try{this.getSettingsClient()!=null&&this.getSettingsClient().getMapProviderType({onSuccess:function(e){var n=null;if(typeof e!="undefined")try{n=e.userPreferences.userPreferences[0].preferenceValue}catch(r){}n!=null&&(typeof t.config.providerType=="undefined"||n!=t.config.providerType)&&(t.config.providerType=n,t.processProviderPreference(),t.switchMapProvider(t.config.providerType))},onFailure:function(e){typeof e.status!="undefined"&&e.status==403?(t.config.providerType=t.selectedMapProvider,t.switchMapProvider(t.config.providerType)):(t.processProviderPreference(),t.switchMapProvider(t.config.providerType))}})}catch(n){}else typeof this.config.forceMapProvider!="undefined"&&this.config.forceMapProvider!=null?(this.config.providerType=this.config.forceMapProvider,this.processProviderPreference(),this.switchMapProvider(this.config.providerType),this.config.forceMapProvider=null):typeof this.config.providerType!="undefined"&&this.config.providerType!=null?(this.processProviderPreference(),this.switchMapProvider(this.config.providerType)):(this.config.providerType=Garmin.Map.Utils.PROVIDER_TYPE_BING,this.processProviderPreference(),this.switchMapProvider(this.config.providerType))},checkDisableBing:function(){this.config.providerType==Garmin.Map.Utils.PROVIDER_TYPE_BING&&typeof this.config.disableBing!="undefined"&&this.config.disableBing&&(this.config.providerType=Garmin.Map.Utils.PROVIDER_TYPE_GOOGLE)},checkDisableNumap:function(){if(typeof this.config.disableNuMap!="undefined"&&this.config.disableNuMap){var e=this.getMapControlsDiv();e.find(".map-provider-numap").remove(),this.config.providerType==Garmin.Map.Utils.PROVIDER_TYPE_NUMAP&&(this.config.providerType=Garmin.Map.Utils.PROVIDER_TYPE_GOOGLE)}},checkDisableBaidu:function(){if(typeof this.config.disableBaidu!="undefined"&&this.config.disableBaidu){var e=this.getMapControlsDiv();e.find(".map-provider-baidu").remove(),this.config.providerType==Garmin.Map.Utils.PROVIDER_TYPE_BAIDU&&(this.config.providerType=Garmin.Map.Utils.PROVIDER_TYPE_GOOGLE)}},enableOnlyBaidu:function(){this.config.providerType!=Garmin.Map.Utils.PROVIDER_TYPE_BAIDU&&(this.config.providerType=Garmin.Map.Utils.PROVIDER_TYPE_BAIDU)},processProviderPreference:function(){this.checkDisableBing(),this.checkDisableNumap();var e=window.location.href;e.indexOf("garmin.cn")==-1?this.checkDisableBaidu():this.enableOnlyBaidu();var t=this.getMapControlsDiv();if(typeof this.config.providerType=="undefined"||this.config.providerType==Garmin.Map.Utils.PROVIDER_TYPE_BING){this.config.providerType=Garmin.Map.Utils.PROVIDER_TYPE_BING;var n=t.find(".map-provider-bing");t.find(".provider .map-btn:first-child").html(n.text()+'<span class="arrow-down"></span>'),t.find(".map-provider-google").removeClass("selected"),t.find(".map-provider-osm").removeClass("selected"),n.addClass("selected")}else if(this.config.providerType==Garmin.Map.Utils.PROVIDER_TYPE_GOOGLE){this.config.providerType=Garmin.Map.Utils.PROVIDER_TYPE_GOOGLE;var r=t.find(".map-provider-google");t.find(".provider .map-btn:first-child").html(r.text()+'<span class="arrow-down"></span>'),t.find(".map-provider-osm.item").removeClass("selected"),r.addClass("selected")}else if(this.config.providerType==Garmin.Map.Utils.PROVIDER_TYPE_OSM){this.config.providerType=Garmin.Map.Utils.PROVIDER_TYPE_OSM;var i=t.find(".map-provider-osm.item");t.find(".provider .map-btn:first-child").html(i.text()+'<span class="arrow-down"></span>'),t.find(".map-provider-bing").removeClass("selected"),t.find(".map-provider-google").removeClass("selected"),i.addClass("selected")}else if(this.config.providerType==Garmin.Map.Utils.PROVIDER_TYPE_NUMAP){this.heatmapAvailable=!1;var s=t.find(".map-provider-numap");t.find(".provider .map-btn:first-child").html(s.text()+'<span class="arrow-down"></span>'),t.find(".map-provider-bing").removeClass("selected"),t.find(".map-provider-google").removeClass("selected"),t.find(".map-provider-osm.item").removeClass("selected"),s.addClass("selected")}else if(this.config.providerType==Garmin.Map.Utils.PROVIDER_TYPE_BAIDU){this.heatmapAvailable=!1;var o=t.find(".map-provider-baidu");t.find(".provider .map-btn:first-child").html(o.text()+'<span class="arrow-down"></span>'),t.find(".map-provider-bing").removeClass("selected"),t.find(".map-provider-google").removeClass("selected"),t.find(".map-provider-osm.item").removeClass("selected"),o.addClass("selected")}},getParentDiv:function(){return jQuery("#"+this.getCurrentMapContainerId())},switchMapProvider:function(e){if(typeof routeController!="undefined"){var t=routeController.getMapProvider().getMapCenter();this.config.latitude=t.lat,this.config.longitude=t.lon}this.clearMapProvider(),this.providerType=this.validateProviderType(e);if(this.isLoaded(this.providerType)){if(this.providerType==Garmin.Map.Utils.PROVIDER_TYPE_GOOGLE)this.mapProviders[Garmin.Map.Utils.PROVIDER_TYPE_GOOGLE]=new Garmin.Map.Google.MapProvider(this.getCurrentMapContainerId(),this.config);else if(this.providerType==Garmin.Map.Utils.PROVIDER_TYPE_MOCK)this.mapProviders[Garmin.Map.Utils.PROVIDER_TYPE_MOCK]=new Garmin.Map.Mock.MapProvider(this.getCurrentMapContainerId(),this.config);else if(this.providerType==Garmin.Map.Utils.PROVIDER_TYPE_BING)this.mapProviders[Garmin.Map.Utils.PROVIDER_TYPE_BING]=new Garmin.Map.Bing.MapProvider(this.getCurrentMapContainerId(),this.config);else if(this.providerType==Garmin.Map.Utils.PROVIDER_TYPE_OSM)this.mapProviders[Garmin.Map.Utils.PROVIDER_TYPE_OSM]=new Garmin.Map.OpenStreetMaps.MapProvider(this.getCurrentMapContainerId(),this.config);else if(this.providerType==Garmin.Map.Utils.PROVIDER_TYPE_NUMAP)this.mapProviders[this.providerType]=new Garmin.Map.NuMap.MapProvider(this.getCurrentMapContainerId(),this.config);else{if(this.providerType!=Garmin.Map.Utils.PROVIDER_TYPE_BAIDU)throw new Error("Unknown provider type "+e);var n=this,r=setInterval(function(){window.baiduLoaded&&(clearInterval(r),n.mapProviders[n.providerType]=new Garmin.Map.Baidu.MapProvider(n.getCurrentMapContainerId(),n.config),n.setMenuItems(),n.applyExistingMenuSelections(),n.getCurrentMapProvider().addMapListener(Garmin.Map.Utils.EVENT_MAP_VIEW_CHANGE_END,n.mapZoomHanlder,n),n.onload())},300)}typeof Garmin.Route!="undefined"&&this.config.mode!=Garmin.Route.Constants.MODE_VIEW&&typeof routeController!="undefined"&&(routeController.routeHandler.history.length>0||this.config.activityId==0)&&(this.config.providerSwitched=!0),this.providerType!==Garmin.Map.Utils.PROVIDER_TYPE_BAIDU&&(this.setMenuItems(),this.applyExistingMenuSelections(),this.getCurrentMapProvider().addMapListener(Garmin.Map.Utils.EVENT_MAP_VIEW_CHANGE_END,this.mapZoomHanlder,this),this.onload())}else{var i,n=this;this.providerType==Garmin.Map.Utils.PROVIDER_TYPE_BING?i=this.config.bingUrl:this.providerType==Garmin.Map.Utils.PROVIDER_TYPE_GOOGLE?i=this.config.googleUrl:this.providerType==Garmin.Map.Utils.PROVIDER_TYPE_OSM?i=this.config.osmUrl:this.providerType==Garmin.Map.Utils.PROVIDER_TYPE_NUMAP?i=this.config.nuMapUrl:this.providerType==Garmin.Map.Utils.PROVIDER_TYPE_BAIDU&&(i=this.config.baiduUrl,window.isOnloading=!0,window.initializeBaidu=function(){window.baiduLoaded=!0,window.isOnloading=!1,n.mapProviders[n.providerType]=new Garmin.Map.Baidu.MapProvider(n.getCurrentMapContainerId(),n.config),n.setMenuItems(),n.applyExistingMenuSelections(),n.getCurrentMapProvider().addMapListener(Garmin.Map.Utils.EVENT_MAP_VIEW_CHANGE_END,n.mapZoomHanlder,n),n.onload()}),jQuery.getScript(i,function(e,t){n.providerType==Garmin.Map.Utils.PROVIDER_TYPE_BING?(n.bingLoaded=!0,n.mapProviders[Garmin.Map.Utils.PROVIDER_TYPE_BING]=new Garmin.Map.Bing.MapProvider(n.getCurrentMapContainerId(),n.config)):n.providerType==Garmin.Map.Utils.PROVIDER_TYPE_GOOGLE?(n.googleLoaded=!0,n.mapProviders[Garmin.Map.Utils.PROVIDER_TYPE_GOOGLE]=new Garmin.Map.Google.MapProvider(n.getCurrentMapContainerId(),n.config)):n.providerType==Garmin.Map.Utils.PROVIDER_TYPE_OSM?(n.osmLoaded=!0,n.mapProviders[Garmin.Map.Utils.PROVIDER_TYPE_OSM]=new Garmin.Map.OpenStreetMaps.MapProvider(n.getCurrentMapContainerId(),n.config)):n.providerType==Garmin.Map.Utils.PROVIDER_TYPE_NUMAP?(n.nuMapLoaded=!0,n.mapProviders[n.providerType]=new Garmin.Map.NuMap.MapProvider(n.getCurrentMapContainerId(),n.config)):n.providerType==Garmin.Map.Utils.PROVIDER_TYPE_BAIDU,typeof Garmin.Route!="undefined"&&n.config.mode!=Garmin.Route.Constants.MODE_VIEW&&typeof routeController!="undefined"&&(routeController.routeHandler.history.length>0||n.config.activityId==0)&&(n.config.providerSwitched=!0),n.providerType!=Garmin.Map.Utils.PROVIDER_TYPE_BAIDU&&(n.setMenuItems(),n.applyExistingMenuSelections(),n.getCurrentMapProvider().addMapListener(Garmin.Map.Utils.EVENT_MAP_VIEW_CHANGE_END,n.mapZoomHanlder,n),n.onload())})}},validateProviderType:function(e){switch(e){case Garmin.Map.Utils.PROVIDER_TYPE_BING:case Garmin.Map.Utils.PROVIDER_TYPE_GOOGLE:case Garmin.Map.Utils.PROVIDER_TYPE_OSM:case Garmin.Map.Utils.PROVIDER_TYPE_BAIDU:case Garmin.Map.Utils.PROVIDER_TYPE_MOCK:return e;default:return Garmin.Map.Utils.PROVIDER_TYPE_BING}},mapZoomHanlder:function(e){if(this.getCurrentMapProvider().hasHeatmapSupport()){var t=this.getCurrentMapProvider().getMapBounds();if(t!=null&&this.getMapControlsDiv().length>0){var n=t.maxLatLon,r=t.minLatLon,i=this.getMapControlsDiv(),s=this.getCurrentMapProvider().isHeatmapAvailable(n,r),o=i.find("#heatmap_li").css("display")!=="none";o!=s&&(i.find("#heatmap_li").toggle(s),this.setMenuItems())}}},clearMapProvider:function(){var e=this.getCurrentMapProvider();if(typeof e!="undefined"&&e!=null){try{e.unloadMap()}catch(t){}this.mapProviders[e.getProviderType()]=null}jQuery("#"+this.getCurrentMapContainerId()).html("")},applyExistingMenuSelections:function(){var e=this.getCurrentMapProvider(),t=this.getMapControlsDiv(),n;t.find(".map-type-map").is(".selected")?(n=Garmin.Map.Utils.MAP_STYLE_ROAD,t.find(".map-layer-terrain").is(".selected")&&e.getProviderType()==Garmin.Map.Utils.PROVIDER_TYPE_GOOGLE&&(n=Garmin.Map.Utils.MAP_STYLE_TERRAIN),e.changeMapStyle(n),e.getProviderType()==Garmin.Map.Utils.PROVIDER_TYPE_GOOGLE&&e.toggleBicycleLayer(t.find(".map-layer-bicycle").is(".selected"))):t.find(".map-type-satellite").is(".selected")&&(n=Garmin.Map.Utils.MAP_STYLE_SATELLITE,t.find(".map-layer-labels").is(".selected")&&e.getProviderType()!=Garmin.Map.Utils.PROVIDER_TYPE_OSM&&(n=Garmin.Map.Utils.MAP_STYLE_HYBRID),e.changeMapStyle(n),e.getProviderType()==Garmin.Map.Utils.PROVIDER_TYPE_GOOGLE&&e.toggleBicycleLayer(t.find(".map-layer-bicycle").is(".selected"))),e.getProviderType()!=Garmin.Map.Utils.PROVIDER_TYPE_OSM&&(t.find(".map-layer-heatmap").is(".selected")&&this.config.heatmapsHidden!=1?(typeof Garmin.Map.Utils.activityType!="undefined"&&(t.find(".map-layer-heatmap-running").is(".selected")?Garmin.Map.Utils.activityType="running":t.find(".map-layer-heatmap-cycling").is(".selected")?Garmin.Map.Utils.activityType="cycling":Garmin.Map.Utils.activityType="running"),e.toggleHeatmapLayersOn()):(e.toggleHeatmapLayersOff(),t.find(".map-layer-heatmap").removeClass("selected"))),typeof this.config.activityId!="undefined"&&e.getProviderType()==Garmin.Map.Utils.PROVIDER_TYPE_BAIDU&&this.applyChinaMenuSelections()},applyChinaMenuSelections:function(e){var t=this.getCurrentMapProvider(),n=this.getMapControlsDiv();t.checkCoordinateSystemByActivity(this.config.activityId,function(r){n.find(".coordinateSystem a").removeClass("selected");var i,s;r?(i=Garmin.Map.Baidu.Constants.GCJ02,s=n.find(".coordinate-system-gcj")):(i=Garmin.Map.Baidu.Constants.WGS84,s=n.find(".coordinate-system-wgs"));var o=t.changedCoordinateSystem(i);s.addClass("selected"),typeof e!="undefined"&&e(o)})},setMenuItems:function(){},isLoaded:function(e){return e==Garmin.Map.Utils.PROVIDER_TYPE_BING?this.bingLoaded:e==Garmin.Map.Utils.PROVIDER_TYPE_GOOGLE?this.googleLoaded:e==Garmin.Map.Utils.PROVIDER_TYPE_MOCK?!0:e==Garmin.Map.Utils.PROVIDER_TYPE_OSM?!0:e==Garmin.Map.Utils.PROVIDER_TYPE_NUMAP?this.nuMapLoaded:e==Garmin.Map.Utils.PROVIDER_TYPE_BAIDU?window.baiduLoaded:!1},getMapProvider:function(e){return this.mapProviders[e]},getCurrentMapProvider:function(){return this.mapProviders[this.providerType]},hideMapProviders:function(){typeof this.getCurrentMapContainerId()!="undefined"&&this.getMapControlsDiv().hide()}},Garmin.Map.Controls=function(e){this.settingsClient=null,this.providerFactory=e,this.onMapProviderTypeUpdatedHander=null,this.isInitialized=!1},Garmin.Map.Controls.prototype={setOnMapProviderTypeUpdatedHandler:function(e){this.onMapProviderTypeUpdatedHander=e},getSettingsClient:function(){return this.settingsClient==null&&typeof Garmin.service!="undefined"&&(this.settingsClient=new Garmin.service.settingsClient),this.settingsClient},initialize:function(){var e=this;if(this.isInitialized)return;this.isInitialized=!0,jQuery("#map_container").trigger("mapControlsInitialized");var t=this.providerFactory.getMapControlsDiv();t.find(".map-zoom-in").click(function(t){t.preventDefault();var n=e.providerFactory.getCurrentMapProvider();n.setZoom(n.getMapProviderZoom()+1)}),t.find(".map-zoom-out").click(function(t){t.preventDefault();var n=e.providerFactory.getCurrentMapProvider();n.setZoom(n.getMapProviderZoom()-1)}),t.find(".map-provider-google").click(function(n){n.preventDefault();var r=jQuery(this);r.hasClass("selected")||(e.providerFactory.selectedMapProvider=Garmin.Map.Utils.PROVIDER_TYPE_GOOGLE,e.providerFactory.switchMapProvider(Garmin.Map.Utils.PROVIDER_TYPE_GOOGLE),typeof e.providerFactory.config.authenticated!="undefined"&&e.providerFactory.config.authenticated==1?e.getSettingsClient().updateMapProviderType(Garmin.Map.Utils.PROVIDER_TYPE_GOOGLE,{onSuccess:function(){e.onMapProviderTypeUpdatedHander!=null&&e.onMapProviderTypeUpdatedHander(Garmin.Map.Utils.PROVIDER_TYPE_GOOGLE)}}):e.onMapProviderTypeUpdatedHander!=null&&e.onMapProviderTypeUpdatedHander(Garmin.Map.Utils.PROVIDER_TYPE_GOOGLE),t.find(".map-provider .item").removeClass("selected"),r.addClass("selected"),t.find(".provider .map-btn:first-child").html(r.text()+'<span class="arrow-down"></span>'))}),t.find(".map-provider-bing").click(function(n){n.preventDefault();var r=jQuery(this);r.hasClass("selected")||(e.providerFactory.selectedMapProvider=Garmin.Map.Utils.PROVIDER_TYPE_BING,e.providerFactory.switchMapProvider(Garmin.Map.Utils.PROVIDER_TYPE_BING),typeof e.providerFactory.config.authenticated!="undefined"&&e.providerFactory.config.authenticated==1?e.getSettingsClient().updateMapProviderType(Garmin.Map.Utils.PROVIDER_TYPE_BING,{onSuccess:function(){e.onMapProviderTypeUpdatedHander!=null&&e.onMapProviderTypeUpdatedHander(Garmin.Map.Utils.PROVIDER_TYPE_BING)}}):e.onMapProviderTypeUpdatedHander!=null&&e.onMapProviderTypeUpdatedHander(Garmin.Map.Utils.PROVIDER_TYPE_BING),t.find(".map-provider .item").removeClass("selected"),r.addClass("selected"),t.find(".provider .map-btn:first-child").html(r.text()+'<span class="arrow-down"></span>'))}),t.find(".map-provider-osm").click(function(n){n.preventDefault();var r=jQuery(this);r.hasClass("selected")||(e.providerFactory.selectedMapProvider=Garmin.Map.Utils.PROVIDER_TYPE_OSM,e.providerFactory.switchMapProvider(Garmin.Map.Utils.PROVIDER_TYPE_OSM),typeof e.providerFactory.config.authenticated!="undefined"&&e.providerFactory.config.authenticated==1?e.getSettingsClient().updateMapProviderType(Garmin.Map.Utils.PROVIDER_TYPE_OSM,{onSuccess:function(){e.onMapProviderTypeUpdatedHander!=null&&e.onMapProviderTypeUpdatedHander(Garmin.Map.Utils.PROVIDER_TYPE_OSM)}}):e.onMapProviderTypeUpdatedHander!=null&&e.onMapProviderTypeUpdatedHander(Garmin.Map.Utils.PROVIDER_TYPE_OSM),t.find(".map-provider .item").removeClass("selected"),r.addClass("selected"),t.find(".provider .map-btn:first-child").html(r.text()+'<span class="arrow-down"></span>'))}),t.find(".map-provider-numap").click(function(n){n.preventDefault();var r=jQuery(this);r.hasClass("selected")||(e.providerFactory.selectedMapProvider=Garmin.Map.Utils.PROVIDER_TYPE_NUMAP,e.providerFactory.switchMapProvider(Garmin.Map.Utils.PROVIDER_TYPE_NUMAP),typeof e.providerFactory.config.authenticated!="undefined"&&e.providerFactory.config.authenticated==1?e.getSettingsClient().updateMapProviderType(Garmin.Map.Utils.PROVIDER_TYPE_NUMAP,{onSuccess:function(){e.onMapProviderTypeUpdatedHander!=null&&e.onMapProviderTypeUpdatedHander(Garmin.Map.Utils.PROVIDER_TYPE_NUMAP)}}):e.onMapProviderTypeUpdatedHander!=null&&e.onMapProviderTypeUpdatedHander(Garmin.Map.Utils.PROVIDER_TYPE_NUMAP),t.find(".map-provider .item").removeClass("selected"),r.addClass("selected"),t.find(".provider .map-btn:first-child").html(r.text()+'<span class="arrow-down"></span>'))}),t.find(".map-provider-baidu").click(function(n){n.preventDefault();var r=jQuery(this);r.hasClass("selected")||(e.providerFactory.selectedMapProvider=Garmin.Map.Utils.PROVIDER_TYPE_BAIDU,e.providerFactory.switchMapProvider(Garmin.Map.Utils.PROVIDER_TYPE_BAIDU),typeof e.providerFactory.config.authenticated!="undefined"&&e.providerFactory.config.authenticated==1?e.getSettingsClient().updateMapProviderType(Garmin.Map.Utils.PROVIDER_TYPE_BAIDU,{onSuccess:function(){e.onMapProviderTypeUpdatedHander!=null&&e.onMapProviderTypeUpdatedHander(Garmin.Map.Utils.PROVIDER_TYPE_BAIDU)}}):e.onMapProviderTypeUpdatedHander!=null&&e.onMapProviderTypeUpdatedHander(Garmin.Map.Utils.PROVIDER_TYPE_BAIDU),t.find(".map-provider .item").removeClass("selected"),r.addClass("selected"),t.find(".provider .map-btn:first-child").html(r.text()+'<span class="arrow-down"></span>'))}),t.find(".map-btn").click(function(e){e.preventDefault()}),t.find(".map-type-satellite").click(function(n){n.preventDefault();var r=e.providerFactory.getCurrentMapProvider(),i=jQuery(this);i.hasClass("selected")||(t.find(".map-type a").removeClass("selected"),i.addClass("selected"),t.find(".map-layer-terrain").parent().hide(),r.hasTrailSupport()&&r.toggleBicycleLayer(t.find(".map-layer-bicycle").is(".selected")),r.hasLabelSupport()?(t.find(".map-layer-labels").parent().show(),t.find(".map-layer-labels").hasClass("selected")?r.changeMapStyle(Garmin.Map.Utils.MAP_STYLE_HYBRID):r.changeMapStyle(Garmin.Map.Utils.MAP_STYLE_SATELLITE)):r.changeMapStyle(Garmin.Map.Utils.MAP_STYLE_SATELLITE))}),t.find(".map-type-map").click(function(n){n.preventDefault();var r=e.providerFactory.getCurrentMapProvider(),i=jQuery(this);i.hasClass("selected")||(r.changeMapStyle(Garmin.Map.Utils.MAP_STYLE_ROAD),t.find(".map-type a").removeClass("selected"),i.addClass("selected"),r.hasTrailSupport()&&r.toggleBicycleLayer(t.find(".map-layer-bicycle").is(".selected")),r.hasTerrainSupport()&&t.find(".map-layer-terrain").parent().show(),t.find(".map-layer-labels").parent().hide(),t.find(".map-layer-labels").removeClass("selected"))}),t.find(".map-layer-labels").click(function(t){t.preventDefault();var n=e.providerFactory.getCurrentMapProvider(),r=jQuery(this);r.toggleClass("selected"),r.hasClass("selected")&&n.changeMapStyle(Garmin.Map.Utils.MAP_STYLE_HYBRID)}),t.find(".map-layer-terrain").click(function(t){t.preventDefault();var n=!1;if(e.providerFactory.providerType==Garmin.Map.Utils.PROVIDER_TYPE_BING||e.providerFactory.providerType==Garmin.Map.Utils.PROVIDER_TYPE_GOOGLE)n=!0;var r=e.providerFactory.getCurrentMapProvider(),i=jQuery(this);i.toggleClass("selected"),i.hasClass("selected")&&r.changeMapStyle(Garmin.Map.Utils.MAP_STYLE_TERRAIN)}),t.find(".map-layer-bicycle").click(function(t){t.preventDefault();var n=e.providerFactory.getCurrentMapProvider(),r=jQuery(this);r.toggleClass("selected"),n.toggleBicycleLayer(r.is(".selected"))}),t.find(".map-layer-heatmap").click(function(n){n.preventDefault();var r=e.providerFactory.getCurrentMapProvider(),i=jQuery(this);if(typeof Garmin.Map.Utils.activityType!="undefined"||Garmin.Map.Utils.activityType==null)t.find(".map-layer-heatmap-running").is(".selected")?Garmin.Map.Utils.activityType="running":t.find(".map-layer-heatmap-cycling").is(".selected")?Garmin.Map.Utils.activityType="cycling":(Garmin.Map.Utils.activityType="running",t.find(".map-layer-heatmap-running").addClass("selected"));t.find(".map-layer-heatmap").is(".selected")?(r.toggleHeatmapLayersOff(),i.removeClass("selected")):(r.toggleHeatmapLayersOn(),i.addClass("selected"))}),t.find(".map-layer-heatmap-running").click(function(n){n.preventDefault();var r=e.providerFactory.getCurrentMapProvider(),i=jQuery(this);t.find(".map-layer-heatmap-running").is(".selected")||(Garmin.Map.Utils.activityType="running",r.toggleHeatmapLayersOn(),i.addClass("selected"),t.find(".map-layer-heatmap-cycling").removeClass("selected"))}),t.find(".map-layer-heatmap-cycling").click(function(n){n.preventDefault();var r=e.providerFactory.getCurrentMapProvider(),i=jQuery(this);t.find(".map-layer-heatmap-cycling").is(".selected")||(Garmin.Map.Utils.activityType="cycling",r.toggleHeatmapLayersOn(),i.addClass("selected"),t.find(".map-layer-heatmap-running").removeClass("selected"))}),t.find(".map-select-trigger").each(function(){var n=jQuery(this);n.click(function(n){n.preventDefault();var r=jQuery(this);e.resetMapControls(),t.find(".map-menu").stop(!0,!0),r.addClass("selected"),r.next(".map-menu").show(),r.find(".arrow-down").addClass("clicked")}),t.find(".map-control-item").mouseleave(function(){jQuery(this).find(".map-menu").stop(!0,!0).delay(300).slideUp(20,function(){e.resetMapControls()})}),t.find(".map-menu").mouseenter(function(){jQuery(this).stop(!0,!0).show()})});var n=function(n){n.preventDefault();var r=jQuery(this);if(!r.hasClass("selected")){t.find(".coordinateSystem a").removeClass("selected"),r.addClass("selected");var i=e.providerFactory.getCurrentMapProvider(),s=r.hasClass("coordinate-system-gcj"),o=s?Garmin.Map.Baidu.Constants.GCJ02:Garmin.Map.Baidu.Constants.WGS84,u=e.providerFactory.config;i.changedCoordinateSystem(o),typeof u.activityId!="undefined"&&typeof u.isOwner!="undefined"&&u.isOwner&&i.updateActivityIsGcjFlag(u.activityId,s)}};t.find(".coordinate-system-wgs").click(n),t.find(".coordinate-system-gcj").click(n),t.find(".coordinateSystem .switch").click(function(e){e.preventDefault();var n=t.find(".coordinate-system-gcj"),r=t.find(".coordinate-system-wgs"),i=n.hasClass("selected");i?r.click():n.click()})},resetMapControls:function(){var e=this.providerFactory.getMapControlsDiv();e.find(".map-select-trigger").removeClass("selected"),e.find(".map-controls .map-menu").hide(),e.find(".map-controls .arrow-down").removeClass("clicked")},unload:function(){var e=this.providerFactory.getMapControlsDiv();e.find(".map-zoom-in").unbind("click"),e.find(".map-zoom-out").unbind("click"),e.find("map-provider-google").unbind("click"),e.find(".map-provider-bing").unbind("click"),e.find(".map-provider-osm").unbind("click"),e.find(".map-provider-numap").unbind("click"),e.find(".map-provider-baidu").unbind("click"),e.find(".map-btn").unbind("click"),e.find(".map-type-satellite").unbind("click"),e.find(".map-type-map").unbind("click"),e.find(".map-layer-bicycle").unbind("click"),e.find(".map-layer-labels").unbind("click"),e.find(".map-layer-terrain").unbind("click"),e.find(".map-layer-heatmap").unbind("click"),e.find(".map-layer-heatmap-running").unbind("click"),e.find(".map-layer-heatmap-cycling").unbind("click"),e.find(".coordinate-system-wgs").unbind("click"),e.find(".coordinate-system-gcj").unbind("click")}},define("garminmapcontrols",["garminmap","settingsclient"],function(){}),define("views/sharing/ShareStaticMapImageView",["backbone","underscore","localizer","personalizer","constants/map/map","utils/NavigationUtil","utils/AnalyticsUtil","views/map/MapViewUtils","views/sharing/SharingView","views/main/Modal/ModalPopupView","views/sharing/EmbedModalPopupView","models/user/ViewerSocialProfile","text!templates/sharing/ShareStaticMapImageView.html","garminmap","garminmapcontrols"],function(e,t,n,r,i,s,o,u,a,f,l,c,h){var p="//static.garmincdn.com/com.garmin.connect/content/images/garmin-connect-fb2.gif",d={Up:"up",Down:"down"},v={facebook:"facebook",weibo:"weibo",twitter:"twitter"},m={LAP_SWIMMING:"lap_swimming",OPEN_WATER_SWIMMING:"open_water_swimming",SWIMMING:"swimming"},g=a.extend({events:{"click #shareToFacebookFromShareStaticMapImageView":"clickShareFacebookButton","click #shareToWeiboFromShareStaticMapImageView":"clickShareSinaWeiboButton","click #shareToTwitterFromShareStaticMapImageView":"clickShareTwitterButton","click #activity-detail-embed":"clickEmbedButton"},initialize:function(e){this.privacy=e.privacy,this.url=e.url,this.locale=e.locale,this.customClasses=e.customClasses,this.mapProviderPreference=e.mapProviderPreference,this.customClasses||(this.customClasses=""),this.slideDirection=e.slideDirection||d.Down,this.template=t.template(h),this.widgetPageUrl=window.parent.location.href,this.preferredLocale=e.locale,this.setActivity(e.currentActivity),this.imageUrl=p,this.mapImageWidth=300,this.mapImageHeight=300,this.socialPlatform=null,this.fileFormat=null,this.popupShareWindow=null,this.hasMap=e.hasMap},setActivity:function(e){e.has("activityTypeDTO")?(this.activityType=e.get("activityTypeDTO").typeKey,this.distance=e.get("summaryDTO").distance,this.duration=e.get("summaryDTO").duration,this.averageSpeed=e.get("summaryDTO").averageSpeed,this.elevationGain=e.get("summaryDTO").elevationGain):(this.activityType=e.get("activityType").typeKey,this.distance=e.get("distance"),this.duration=e.get("duration"),this.averageSpeed=e.get("averageSpeed"),this.elevationGain=e.get("elevationGain")),this.activity=e,this.activityDetailsInfo=this.getActivityDetailsInfo(),this.activityId=this.activity.id},render:function(){var e=this.template({Localizer:n,privacy:this.privacy,url:this.url,locale:this.locale,customClasses:this.customClasses,directionClass:this.slideDirection==d.Up?"bottom-up":"",showIcon:this.slideDirection!=d.Up});this.$el.html(e),this.$el.addClass("dropdown share addthis_toolbox"),this.$el.addClass(this.customClasses),this.$el.attr("addthis:url",this.url);var t=this.$(".dropdown-trigger");t.attr("disabled","disabled"),t.addClass("disabled");var r=this;require(["addthis"],function(e){r.setPrivacy(r.privacy),e.init(),e.toolbox(".addthis_toolbox")})},setPrivacy:function(e){this.privacy=e;var t=this.$(".dropdown-trigger");e=="public"?(t.removeAttr("disabled"),t.removeClass("disabled"),t.attr("title",n.localize("share"))):(t.attr("disabled","disabled"),t.addClass("disabled"),t.attr("title",n.localize("share.disabled")))},setUrl:function(e){this.url=e},getActivityDetailsInfo:function(){var e=n.localize("label_distance"),t=r.personalizeDistance(this.distance,this.activityType),i=n.localize(r.getDistanceUnitKey(this.activityType,this.distance)),s=n.localize("label_time"),o=r.personalizeDuration(this.duration),u=n.localize(r.getSpeedTypeLabelKey(this.activityType)),a=r.personalizeSpeed(this.averageSpeed,this.activityType,this.distance),f=n.localize(r.getSpeedTypeKey(this.activityType,this.distance)),l=n.localize("label_elevation_gain"),c=r.personalizeElevation(this.elevationGain),h=n.localize(r.getElevationUnitKey()),p=e+" "+t+" "+i+" | "+s+" "+o+" | "+u+" "+a+" "+f+" | "+l+" "+c+" "+h;return p},clickShareFacebookButton:function(){this.socialPlatform=v.facebook,this.OpenPopupShareWindow(),this.pushSocialShareAnalyticsEvents()},clickShareSinaWeiboButton:function(){this.socialPlatform=v.weibo,this.OpenPopupShareWindow(),this.pushSocialShareAnalyticsEvents()},clickShareTwitterButton:function(){this.socialPlatform=v.twitter,this.OpenPopupShareWindow(),this.pushSocialShareAnalyticsEvents()},pushSocialShareAnalyticsEvents:function(){o.push({event:"track_event",category:"Activity Share",action:"Share on "+this.socialPlatform})},clickEmbedButton:function(){var e=new l({activityId:this.activityId,noOfChildren:this.activity.has("activityTypeDTO")?this.activity.get("childIds").length:0,activityName:this.activity.get("activityName"),hasMap:this.hasMap}),t=new f({modalTitle:n.localize("embed"),view:e.render(),showFooter:!1,customClasses:"activity-detail-embed"});t.render()},OpenPopupShareWindow:function(){this.popupShareWindow=window.open("","","width=600, height=300"),this.popupShareWindow.document.write('<br /><br /><p style="text-align:center; font-size:18px;"><img src="//static.garmincdn.com/shared/global/media/images/ajax-loader.gif" alt="" /><br />Processing, please wait...</p>'),this.fileFormat="png",this.getEncodedPolylineJson()},getEncodedPolylineJson:function(){this.cachedPolylines==undefined&&(this.cachedPolylines=[]);if(this.cachedPolylines[this.activityId]==undefined||this.cachedPolylines[this.activityId]==null){var e;this.activityType==m.SWIMMING||this.activityType==m.LAP_SWIMMING||this.activityType==m.OPEN_WATER_SWIMMING?e="/proxy/activity-service/activity/"+this.activityId+"/swimDetails":e="/proxy/activity-service/activity/"+this.activityId+"/details";var t=this;jQuery.ajax({url:e,type:"GET",dataType:"json",success:function(e,n,r){t.cachedPolylines[t.activityId]=e,$.isEmptyObject(e)||$.isEmptyObject(e.geoPolylineDTO)?t.redirectPopupShareWindow():t.getPolylineJson(e)},error:function(e,n,r){t.redirectPopupShareWindow()}})}else this.getPolylineJson(this.cachedPolylines[this.activityId])},getPolylineJson:function(e){if(e.geoPolylineDTO!=null&&e.geoPolylineDTO.polyline.length>0){var t=e.geoPolylineDTO.polyline,n=[];for(var r=0;r<t.length;r++){var i=t[r],s=new Garmin.Map.Point(i.lat,i.lon,0);n.push(s)}this.points=n,this.getStaticMapImageFromMapProvider()}else this.imageUrl=p,this.redirectPopupShareWindow()},getStaticMapImageFromMapProvider:function(){var e=this.mapProviderPreference?this.mapProviderPreference.get("value"):"google";this.isPolylineInChina()&&u.userInChina()&&(e=Garmin.Map.Utils.PROVIDER_TYPE_BAIDU),e==Garmin.Map.Utils.PROVIDER_TYPE_BAIDU?this.downloadBaiduStaticMapImage():e==Garmin.Map.Utils.PROVIDER_TYPE_OSM?this.setOsmStaticMapImageUrl()&&this.downloadAndUploadGoogleStaticMapImage():(e=Garmin.Map.Utils.PROVIDER_TYPE_GOOGLE,this.downloadAndUploadGoogleStaticMapImage())},isPolylineInChina:function(){var e=[54.27,123,51.07,117.8,46.5,115.3,43.6,103.9,46.38,93.3,47.93,91.4,49.75,87.5,45.34,79.5,39.8,73.2,35.6,75.4,30.2,79.9,27.3,89,25.4,97.3,22.1,98.7,20.8,102.2,22.2,105.5,20.8,108,18.9,106.8,14.3,109.9,8.3,105.9,3.1,103.7,.73,108.5,3.3,111,7.7,116.3,18.4,119.9,23.46,118.23,25.9,121.62,29.97,123.71,37.6,123.7,39.8,123.8,42.6,131,46.5,134.5,48.55,135.1,48.98,130.9,52.43,127.4],t=[];for(var n=0;n<e.length;n+=2)t.push({lat:e[n],lng:e[n+1]});var r=Math.round(this.points.length/2),i={lat:this.points[r].lat.toString().match(/-{0,1}\d+\.\d{0,5}/),lng:this.points[r].lon.toString().match(/-{0,1}\d+\.\d{0,5}/)};return this.isPointInPoly(i,t)},isPointInPoly:function(e,t){for(var n=!1,r=-1,i=t.length,s=i-1;++r<i;s=r)(t[r].lat<=e.lat&&e.lat<t[s].lat||t[s].lat<=e.lat&&e.lat<t[r].lat)&&e.lng<(t[s].lng-t[r].lng)*(e.lat-t[r].lat)/(t[s].lat-t[r].lat)+t[r].lng&&(n=!n);return n},downloadBaiduStaticMapImage:function(){var e=Garmin.Map.Baidu.Constants.WGS84;this.activity.has("gcj02")&&this.activity.get("gcj02")==1&&(e=Garmin.Map.Baidu.Constants.GCJ02);var t=2048,n=this.points.length,r=this.getIterationGap(t,n),i=[];for(var s=0;s<n-r;s+=r){var o=this.points[s].lat.toString().match(/-{0,1}\d+\.\d{0,5}/),u=this.points[s].lon.toString().match(/-{0,1}\d+\.\d{0,5}/),a=new BMap.Point(u,o);i.push(a)}var f=this;Garmin.Map.Baidu.Convertor.convertMultiple(i,function(e){var n="&paths=",r=180,i=-180,s=90,o=-90,u=e.length,a=f.getIterationGap(t,u);for(var l=0;l<u-a;l+=a){var c=e[l].lat.toString().match(/-{0,1}\d+\.\d{0,5}/),h=e[l].lng.toString().match(/-{0,1}\d+\.\d{0,5}/);c<s&&(s=c),c>o&&(o=c),h<r&&(r=h),h>i&&(i=h),c!=null&&h!=null&&c.length>0&&h.length>0&&(n+=h+","+c+";")}var p="&center="+((parseFloat(i)+parseFloat(r))/2).toString().match(/-{0,1}\d+\.\d{0,5}/)+","+((parseFloat(o)+parseFloat(s))/2).toString().match(/-{0,1}\d+\.\d{0,5}/),d="&pathStyles=0xff0000,2,0.8",v=e[0].lng.toString().match(/-{0,1}\d+\.\d{0,5}/)+","+e[0].lat.toString().match(/-{0,1}\d+\.\d{0,5}/),m=e[u-1].lng.toString().match(/-{0,1}\d+\.\d{0,5}/)+","+e[u-1].lat.toString().match(/-{0,1}\d+\.\d{0,5}/),g="&markers="+v+"|"+m+"&markerStyles=l,S,green|l,E,red";f.staticMapImageUrl="https://sapi.map.baidu.com/staticimage?v=2.0&ak=KQMz9KcIzBwWNUgbHWUHZGSD&s=1&width="+f.mapImageWidth+"&height="+f.mapImageHeight+p+g+n+d,f.downloadAndUploadStaticMapImage()},e)},setOsmStaticMapImageUrl:function(){return this.isPolylineInChina()?!1:!0},getIterationGap:function(e,t){var n=400,r=22,i=parseInt((e-n)/r,10);return t<i?1:parseInt(t/i,10)+1},downloadAndUploadStaticMapImage:function(){var e=this;jQuery.ajax({url:"/modern/proxy/image-service/imageservice/downloadAndUploadStaticMapImage",data:{urlStr:encodeURIComponent(this.staticMapImageUrl),activityId:this.activityId,fileFormat:this.fileFormat},type:"GET",dataType:"JSON",success:function(t,n,r){e.activityName=jQuery(".js-activityNameEditPlaceholder a").text().trim();if(t.hasOwnProperty("status")&&t.status==1){var i=!!document.documentMode;e.imageUrl=t.imageUrl}e.redirectPopupShareWindow()},error:function(t,n,r){e.activityName=jQuery(".js-activityNameEditPlaceholder a").text().trim(),e.redirectPopupShareWindow()}})},downloadAndUploadGoogleStaticMapImage:function(){var e=this;jQuery.ajax({url:"/proxy/activity-service/activity/"+this.activityId+"/share",type:"GET",dataType:"JSON",success:function(t,n,r){var i=t;e.activityName=jQuery(".js-activityNameEditPlaceholder a").text().trim(),i.hasOwnProperty("status")&&i.status==1&&(e.imageUrl=i.imageUrl),e.redirectPopupShareWindow()},error:function(t,n,r){e.activityName=jQuery(".js-activityNameEditPlaceholder a").text().trim(),e.redirectPopupShareWindow()}})},redirectPopupShareWindow:function(){var e=this.widgetPageUrl.split("/"),t=e[0],n=e[2],r=n.split("."),i=r[0]+".garmin.com";this.isGarminLogo=this.imageUrl==p?"1":"0";var s=t+"//"+i+"/modern/activity/"+this.activityId+"/share/"+this.isGarminLogo+"?lang="+this.preferredLocale,o=null;this.socialPlatform==v.facebook?o="https://www.facebook.com/sharer/sharer.php?u="+encodeURIComponent(s)+"&p[title]=Garmin%20Connect&display=popup":this.socialPlatform==v.weibo?o="http://service.weibo.com/share/share.php?url="+encodeURIComponent(s)+"&pic="+encodeURIComponent(this.imageUrl)+"&title="+encodeURIComponent(this.activity.get("activityName").trim()+": "+this.activityDetailsInfo):this.socialPlatform==v.twitter&&(o="http://twitter.com/share?text="+encodeURIComponent(this.activity.get("activityName").trim())+"&url="+encodeURIComponent(s)),this.popupShareWindow.location.replace(o)}});return g.SlideDirection=d,g.SocialPlatorm=v,g}),define("text!pages/activities/templates/DivingActivityNameInlineEditView.html",[],function(){return'<a href="<%= url %>" class="inline-edit-target" title="<%= value %>">\n    <%= Localizer.localize(\'dive_number_label\') + \' \' + diveNumber + \': \' + value %>\n</a>\n\n<button class="inline-edit-trigger modal-trigger">\n    <i class="icon-pencil"></i>\n</button>\n\n<div class="inline-edit-editable">\n    <div class="edit-dive-activity-dive-label"><%= Localizer.localize(\'dive_number_label\') %></div>\n    <div id="inlineEditDiveNumber"  class="inline-edit-editable-text dive-number" style="min-width: 15px;" contenteditable="true"><%= diveNumber %></div>\n    <div id="inlineEditText" class="inline-edit-editable-text dive-name" style="min-width: 15px;" contenteditable="true"><%= value %></div>\n    <span class="inline-edit-actions">\n        <button class="inline-edit-save icon-checkmark"></button>\n        <button class="inline-edit-cancel icon-close"></button>\n    </span>\n</div>\n'}),define("pages/activities/views/DivingActivityNameInlineEditView",["require","underscore","localizer","utils/validators/NumberValidator","utils/reporters/ToolTipErrorReporter","utils/validators/RequiredValidator","views/utils/InlineEditView","text!pages/activities/templates/DivingActivityNameInlineEditView.html"],function(e){var t=e("underscore"),n=e("localizer"),r=e("utils/validators/NumberValidator"),i=e("utils/reporters/ToolTipErrorReporter"),s=e("utils/validators/RequiredValidator"),o=e("views/utils/InlineEditView"),u=e("text!pages/activities/templates/DivingActivityNameInlineEditView.html"),a={CHANGE:"CHANGE"},f=o.extend({template:t.template(u),initialize:function(e){this.diveNumber=e.diveNumber,o.prototype.initialize.call(this,e)},render:function(){this.$el.removeClass("edit"),this.$el.addClass(this.formatClass+" inline-edit inline-edit-text-field"),this.$el.html(this.template({Localizer:n,value:this.value,url:this.url,diveNumber:this.diveNumber})),this.diveNumberValidator=new r({element:this.$("#inlineEditDiveNumber"),minValue:1,required:!0,typeFormat:"integer",reporter:new i({message:n.localize("enter_a_number"),position:"bottom",element:this.$("#inlineEditDiveNumber")})})},processInput:function(){var e=this.$("#inlineEditText").text().trim(),t=this.$("#inlineEditDiveNumber").text().trim();this.diveNumberValidator.validateInputNow();var n=this.$(".error-tooltip-active"),r=n.length===0;r&&(this.value=e,this.maxLength&&this.value.length>this.maxLength&&(this.value=this.value.substring(0,this.maxLength)),this.trigger(a.CHANGE,this.value,t))},onInlineEditCancelled:function(e){this.diveNumberValidator.reporter.remove(),o.prototype.onInlineEditCancelled.call(this,e)},setDiveNumber:function(e){this.diveNumber=e}});return f.Events=a,f}),define("utils/ActivityTypeMapper",[],function(){return{Cycling:"cycling",Running:"running",Hiking:"hiking",Walking:"walking",Swimming:"swimming",FitnessEquip:"fitness_equipment",Other:"other",Uncategorized:"uncategorized",Yoga:"yoga",StrengthTraining:"strength_training",Cardio:"indoor_cardio"}}),define("widgets/activity/views/HRChartView",["require","underscore","backbone","localizer","personalizer","highcharts"],function(e){var t=e("underscore"),n=e("backbone"),r=e("localizer"),i=e("personalizer"),s=e("highcharts"),o=n.View.extend({render:function(){var e=this,t=this.getData();if(t===null)return;this.$el.highcharts({chart:{type:"area",backgroundColor:"transparent",spacing:[5,0,0,0]},plotOptions:{area:{color:"#daf200",lineWidth:2,fillOpacity:.4}},title:{text:null},xAxis:{labels:{align:"right",formatter:function(){return this.value==="0"?"":e.dateFormatNoLeadingZeros(this.value)},style:{color:"#222"},step:1,y:-3},tickInterval:null,tickLength:5,showFirstLabel:!1,showLastLabel:!0,staggerLines:1},yAxis:{gridLineWidth:0,tickLength:null,title:{text:null},labels:{align:"left",x:6,y:-3,style:{color:"#222"}},plotLines:[{value:0,width:1}]},tooltip:{formatter:function(){return this.y+r.localize(i.getHeartRateUnitKey())},style:{color:"#222"}},legend:{align:"left",verticalAlign:"top",symbolHeight:14,symbolWidth:14,symbolRadius:7,margin:35,itemStyle:{cursor:"default",fontWeight:"normal"}},series:[{data:t,color:"#ff2659",fillColor:"#ff2659",pointInterval:1e3,name:r.localize("label_heart_rate"),marker:{enabled:!1},events:{legendItemClick:function(){return!1}}}],credits:{enabled:!1},exporting:{enabled:!1}})},getData:function(){return this.model.getHRData()},dateFormatNoLeadingZeros:function(e){var t=i.personalizeDuration(e),n=t.indexOf("00:");return n===0&&(t=t.substring(3),n=t.indexOf("00:"),n===0&&(t=t.substring(3))),t}});return o}),define("models/user/ActivityPrivacy",["backbone","models/user/UserProfile","models/user/UserPreference","settingsclient"],function(e,t,n){var r={PUBLIC:1,PRIVATE:2,SUBSCRIBER:3,GROUPS:4},i={PRIVATE:"private",PUBLIC:"public",CONNECTIONS:"subscribers",GROUPS:"groups"},s=function(e){var t=null;switch(e){case i.PUBLIC:t=r.PUBLIC;break;case i.CONNECTIONS:t=r.SUBSCRIBER;break;case i.PRIVATE:t=r.PRIVATE;break;case i.GROUPS:t=r.GROUPS;break;default:t=r.PUBLIC}return t},o=e.Model.extend({defaults:{activityVisibility:r.PUBLIC},initialize:function(){this.activityVisibilityPref=new n({key:"default_activity_visibility_flag"})},fetch:function(e){var t=function(){var e=this.activityVisibilityPref.get("value");this.setActivityVisibility(Number(e))}.bind(this),n=this;this.activityVisibilityPref.fetch({success:function(r){t(),e&&e.success&&e.success(n,r)},error:function(t){e&&e.error&&e.error(n,t)}})},setActivityVisibility:function(e){var t=i.PUBLIC;switch(e){case r.PRIVATE:t=i.PRIVATE;break;case r.SUBSCRIBER:t=i.CONNECTIONS;break;case r.GROUPS:t=i.GROUPS}this.set("activityVisibility",t)},save:function(){var e=r.PUBLIC;this.get("activityVisibility")==i.PRIVATE?e=r.PRIVATE:this.get("activityVisibility")==i.CONNECTIONS?e=r.SUBSCRIBER:this.get("activityVisibility")==i.GROUPS&&(e=r.GROUPS);var t=this;this.activityVisibilityPref.save("value",e,{success:function(){t.trigger("sync")},error:function(){t.trigger("error")}})}});return o.ActivityVisibility=r,o.Constants=i,o.getTypeIdFromTypeKey=s,o}),define("text!templates/privacy/PrivacyView.html",[],function(){return'<%\n    var privacyClasses = {\n        \'private\': \'icon-locked\',\n        \'subscribers\': \'icon-privacy-connections\',\n        \'groups\': \'icon-privacy-connections-and-groups\',\n        \'public\': \'icon-unlocked\'\n    };\n\n    var privacyIconClass = privacyClasses[privacy];\n%> \n\n\n    <button class="dropdown-trigger page-navigation-action" data-toggle="dropdown"><i class="<%= privacyIconClass %> privacy-indicator"></i></button>\n    \n    <ul class="dropdown-menu pull-right">\n        <li class="clearfix">\n            <i class="<%= privacyIconClass %> privacy-state-current pull-right"></i>\n        </li>\n        <li data-privacy="private"><a href="#"><i class="icon-locked"></i> <%= Localizer.localize(\'privacy.private.title\') %></a></li>\n        <li data-privacy="subscribers"><a href="#"><i class="icon-privacy-connections"></i> <%= Localizer.localize(\'privacy.connections.title\') %></a></li>\n        <li data-privacy="groups"><a href="#"><i class="icon-privacy-connections-and-groups"></i> <%= Localizer.localize(\'privacy.connections.and.groups.title\') %></a></li>\n        <li data-privacy="public"><a href="#"><i class="icon-unlocked"></i> <%= Localizer.localize(\'privacy.public.title\') %></a></li>\n    </ul>\n\n'}),define("views/privacy/PrivacyView",["underscore","backbone","localizer","text!templates/privacy/PrivacyView.html"],function(e,t,n,r){var i={CHANGE:"CHANGE"},s=t.View.extend({events:{"click li":"onPrivacyOptionSelected"},initialize:function(t){e.bindAll(this,"onSaveSuccess"),this.template=e.template(r),this.privacy=t.privacy},render:function(){var e=this.template({Localizer:n,privacy:this.privacy});this.$el.addClass("dropdown page-dropdown privacy-select"),jQuery(this.el).html(e),this.$("[data-privacy='"+this.privacy+"']").addClass("active")},onPrivacyOptionSelected:function(e){e.preventDefault();var t=jQuery(e.currentTarget),n=t.attr("data-privacy");n&&this.trigger(i.CHANGE,n)},onSaveSuccess:function(e){this.setPrivacy(e)},setPrivacy:function(e){this.privacy=e}});return s.Events=i,s}),define("text!widgets/activity/templates/ManualEditView.html",[],function(){return'<div class="widget-sheet-content-inner">\n<h5><%= Localizer.localize(\'add_manual_activity_title\') %></h5>\n<div class="control-group-container">\n\n    <div class="control-group">\n        <label class="control-label" for="activityName">* <%= Localizer.localize(\'manualActivity.name\') %></label>\n        <div class="controls">\n            <input type="text" name="activityName" class="input-large input-activity-name" maxlength="1024">\n            <div id="privacy-view-placeholder" class="dropdown page-dropdown privacy-select"></div>\n        </div>\n    </div>\n\n    <div class="control-group">\n        <label class="control-label" for="<% beginDateId %>">* <%= Localizer.localize(\'manualActivity.date\') %></label>\n        <div class="controls">\n            <div class="datePickerPlaceholder"></div>\n        </div>\n    </div>\n\n    <div class="control-group">\n        <label class="control-label" for="<% beginTimeId %>">* <%= Localizer.localize(\'manualActivity.starttime\') %></label>\n        <div class="controls">\n            <span class="timePickerPlaceholder"></span>\n        </div>\n    </div>\n\n    <%\n            var activityTypeKey = activity.activityType ? activity.activityType.typeKey : \'uncategorized\';\n            var eventTypeKey = activity.eventType ? activity.eventType.typeKey : \'uncategorized\';\n    %>\n\n    <div class="control-group">\n        <label class="control-label" for="activityType">* <%= Localizer.localize(\'manualActivity.activityType\') %></label>\n        <div class="controls">\n            <select class="input-large" data-key="activity_type">\n\n                <% for (var i = 0; i < activityTypes.length; i++) {                 %>\n                <%  var activityType = activityTypes[i];                            %>\n                <%\n                    var selectedText = \'\';\n                    if (activityType.typeKey == activityTypeKey) {\n                        selectedText = \'selected\';\n                    }\n\n                    var activityTypeText = Localizer.localize(\'activity_type_\' + activityType.typeKey);\n                    if (activityType.typeKey == \'uncategorized\') {\n                        activityTypeText = Localizer.localize(\'activity_type_any\');\n                    }\n                %>\n\n                    <option <%= selectedText %> value="<%= activityType.typeKey %>"><%= activityTypeText %></option>\n\n                <%  if (activityType.children.length > 0) {                         %>\n                        <optgroup>\n                <%      for (var j = 0; j < activityType.children.length; j++) {    %>\n                <%          var childType = activityType.children[j];               %>\n                <%\n                            if (childType.typeKey == activityTypeKey) {\n                                selectedText = \'selected\';\n                            }\n                %>\n                            <option <%= selectedText %> value="<%= childType.typeKey %>"><%= Localizer.localize(\'activity_type_\' + childType.typeKey) %></option>\n                <%      }                                                           %>\n                        </optgroup>\n                <%  }                                                               %>\n\n                <%  if (i < activityTypes.length - 1) {                             %>\n                    <optgroup label="----------------------------------"></optgroup>\n                <%  }                                                               %>\n                <% }                                                                %>\n            </select>\n\n        </div>\n    </div>\n\n    <div class="control-group">\n        <label class="control-label" for="eventType">* <%= Localizer.localize(\'manualActivity.eventType\') %></label>\n        <div class="controls">\n            <select class="input-large" data-key="event_type">\n                <% for (var i = 0; i < eventTypes.length; i++) {                        %>\n\n                <%\n                    var eventType = eventTypes[i];\n\n                    selectedText = \'\';\n                    if (eventTypeKey == eventType.typeKey) {\n                        selectedText = \'selected\';\n                    }\n                %>\n                    <option <%= selectedText %> value="<%= eventType.typeKey %>"><%= Localizer.localize(eventType.typeKey) %></option>\n                <% }                                                                    %>\n            </select>\n        </div>\n    </div>\n\n    <div class="control-group">\n        <label class="control-label" for="activitySummarySumDurationHour"><%= Localizer.localize(\'label_time\') %></label>\n        <div class="controls">\n            <div class="durationControlsPlaceholder"></div>\n            <span class="format-example"><%= Localizer.localize(\'manualActivity.formatExample\') %></span>\n        </div>\n    </div>\n\n    <div class="control-group">\n        <label class="control-label" for="activitySummarySumDistance"><%= Localizer.localize(\'label_distance\') %></label>\n        <div class="controls">\n            <input type="text" name="activitySummarySumDistance" class="input-mini">\n            <select name="distanceUnit" class="input-medium select-unit">\n                <option value="yard"><%= Localizer.localize(\'yard\') %></option>\n                <option value="meter"><%= Localizer.localize(\'meter\') %></option>\n                <option value="kilometer"><%= Localizer.localize(\'kilometer\') %></option>\n                <option value="mile" selected="selected"><%= Localizer.localize(\'mile\') %></option>\n            </select>\n        </div>\n    </div>\n\n    <div class="control-group">\n        <label class="control-label" for="activitySummarySumEnergy"><%= Localizer.localize(\'label_calories\') %></label>\n        <div class="controls">\n            <input type="text" name="activitySummarySumEnergy" class="input-small">\n        </div>\n    </div>\n\n    <div class="control-group">\n        <label class="control-label" for="description"><%= Localizer.localize(\'notes\') %></label>\n        <div class="controls">\n            <textarea name="description" rows="4" class="input-xxlarge" maxlength="4000"></textarea>\n        </div>\n    </div>\n    <div class="bottom-s top-s btn-manual">\n        <a href="<%= nu.url(\'/activity/manual/full\') %>" class="colored"><%= Localizer.localize(\'manualActivity.more\') %></a>\n    </div>\n</div>\n\n</div>\n\n<div class="add-activity-confirmation widget-sheet-footer">\n    <div class="control-group button-group">\n        <button class="btn btn-small save-js"><%= Localizer.localize(\'manualActivity.save\') %></button>\n        <button class="btn close-js btn-secondary btn-small"><%= Localizer.localize(\'manualActivity.cancel\') %></button>\n    </div>\n</div>\n'}),define("widgets/activity/views/ManualEditView",["underscore","backbone","localizer","personalizer","utils/ModelSynchronizer","models/user/ViewerUserPreferences","models/user/ActivityPrivacy","models/activity/SummarizedActivity","collections/activity/TimeZones","utils/validators/Validator","utils/validators/RequiredValidator","utils/validators/MaxLengthValidator","utils/validators/NumberValidator","utils/reporters/ToolTipErrorReporter","utils/date/DateUtil","utils/date/DateParser","utils/date/DateFormatter","utils/CalorieUtil","utils/NavigationUtil","views/utils/ElapsedTimeView","views/utils/DatePickerView","views/utils/TimePickerView","views/privacy/PrivacyView","text!widgets/activity/templates/ManualEditView.html"],function(e,t,n,r,i,s,o,u,a,f,l,c,h,p,d,v,m,g,y,b,w,E,S,x){var T={ON_ACTIVITY_SAVED:"ON_ACTIVITY_SAVED"},N=t.View.extend({events:{"click .save-js":"onSaveButtonClicked","click .close-js":"onCancelButtonClicked","change .select-unit":"onDistanceUnitChanged","change select[data-key=activity_type]":"onActivityTypeChanged","change input[name=activityName]":"onActivityNameChanged"},initialize:function(t){if(!t.activityTypes)throw"Activity Types required for Manual Edit.";if(!t.eventTypes)throw"Event Types required for Manual Edit.";this.personalInformation=t.personalInformation,this.activityTypes=t.activityTypes,this.eventTypes=t.eventTypes,this.validators=[],this.distance=0,this.caloriesOverridden=!1,this.isAutoCalcCalories=!0,this.autoCalcCaloriesValue=0,this.template=e.template(x),this.activityPrivacy=new o,this.privacyLoaded=!1,this.privacyTypeId=null;var n=new i;n.addModel({model:this.activityPrivacy,required:!0}),n.bind(i.Events.SYNCHRONIZED,function(){this.privacyLoaded=!0,this.render()},this),n.fetchModels()},render:function(){if(!this.privacyLoaded)return;var e="datePicker"+(new Date).getTime(),t=this.template({Localizer:n,activityTypes:this.activityTypes.toJSONParentChild(),eventTypes:this.eventTypes.toJSON(),activity:this.model.toJSON(),beginDateId:e,beginTimeId:this.getTimePickerViewDivId(),nu:y});this.$el.html(t),this.elapsedTimeView=new b({el:this.$(".durationControlsPlaceholder"),idPrefix:"elapsedTime_"+(new Date).getTime(),maxExceededErrorKey:"error.activity_time_max_exceeded",scrollableElement:this.$(".widget-sheet-content-inner")}),this.elapsedTimeView.bind(b.Events.CHANGE,this.autoCalcCalories,this),this.elapsedTimeView.render(),this.datePickerView=new w({id:e,date:d.getCurrentTime(),userPreferences:s,maxDate:d.getCurrentTime(),el:this.$(".datePickerPlaceholder"),scrollableElement:this.$(".widget-sheet-content-inner")}),this.datePickerView.render(),this.datePickerView.on(w.Events.CHANGE,this.onDatePickerViewChanged,this),this.privacyTypeId=this.activityPrivacy.get("activityVisibility"),this.privacyView=new S({privacy:this.privacyTypeId,el:this.$("#privacy-view-placeholder")}),this.privacyView.on(S.Events.CHANGE,this.onPrivacyChanged,this),this.privacyView.render(),this.setupTimePickerView(),this.setupValidators(),this.setDefaultMeasurementSystem()},onPrivacyChanged:function(e){this.privacyView.setPrivacy(e),this.privacyView.render(),this.privacyTypeId=e},setDefaultMeasurementSystem:function(){var e=s.get("measurementSystem");e=="metric"&&this.$(".select-unit").val("kilometer")},getTimePickerViewDivId:function(){return this.beginTimeId||(this.beginTimeId="timePicker"+(new Date).getTime()),this.beginTimeId},setupTimePickerView:function(){this.timePickerView=new E({id:this.getTimePickerViewDivId(),time:null,userPreferences:s,required:!0,el:this.$(".timePickerPlaceholder"),maxTime:this.getMaxStartTime(),scrollableElement:this.$(".widget-sheet-content-inner")}),this.timePickerView.render()},getMaxStartTime:function(){var e=d.getCurrentTime();return d.isToday(this.datePickerView.date)?new Date(e.getTime()-6e4):new Date(e.getFullYear(),e.getMonth(),e.getDate(),23,59,0)},onDatePickerViewChanged:function(){this.timePickerView.updateMaxTime(this.getMaxStartTime())},setupValidators:function(){var e=this.$("input[name=activityName]"),t=new l({element:e,reporter:new p({message:function(e,t){return n.localize("validation.activity.name.invalid")},scrollableElement:this.$(".widget-sheet-content-inner"),position:"top",element:e})});this.validators.push(t);var i=new c({element:this.$("textarea[name=description]"),maxLength:4e3});this.validators.push(i);var s=this;this.distanceValidator=new h({element:this.$("input[name=activitySummarySumDistance]"),maxValue:160934400.07,conversionFunction:function(e){var t=s.$(".select-unit").val();return r.convertDistanceToCm(e,t)},reporter:new p({message:function(e,t){return n.localize("validation.activity.distance.invalid",e)},scrollableElement:this.$(".widget-sheet-content-inner"),position:"top",element:this.$("input[name=activitySummarySumDistance]")})}),this.distanceValidator.bind(f.Events.ValidationSuccess,this.distanceValidationSuccess,this),this.validators.push(this.distanceValidator);var s=this;this.calorieValidator=new h({element:this.$("input[name=activitySummarySumEnergy]"),minValue:0,maxValue:9999,reporter:new p({message:function(e,t){return n.localize("validation.activity.distance.invalid",e)},scrollableElement:this.$(".widget-sheet-content-inner"),position:"top",element:this.$("input[name=activitySummarySumEnergy]")})}),this.calorieValidator.bind(f.Events.ValidationSuccess,this.setAutoCalcCalorieOverride,this),this.validators.push(this.calorieValidator),this.validators.push(this.datePickerView.dateValidator),this.validators.push(this.timePickerView.timeValidator),this.validators.push(this.elapsedTimeView.validator)},setAutoCalcCalorieOverride:function(e){e&&e.parsedValue&&e.parsedValue!=this.autoCalcCaloriesValue&&(this.caloriesOverridden=!0,this.isAutoCalcCalories=!1)},distanceValidationSuccess:function(e){this.autoCalcCalories(),this.distance=e.parsedValue},validate:function(){for(var e=0;e<this.validators.length;e++){var t=this.validators[e];if(t.validateInputNow())return!1}return this.datePickerView.validate()?!1:this.timePickerView.validate()?!1:this.validateActivityType()?!0:!1},validateActivityType:function(){var e=this.$("select[data-key=activity_type]").val();return e=="uncategorized"?(this.activityTypeErrorReporter&&this.activityTypeErrorReporter.remove(),this.activityTypeErrorReporter=new p({message:function(e,t){return n.localize("validation.activity.activitytype.invalid")},scrollableElement:this.$(".widget-sheet-content-inner"),position:"top",element:this.$("select[data-key=activity_type]")}),this.activityTypeErrorReporter.report(e,"activity_type_invalid"),!1):(this.activityTypeErrorReporter&&this.activityTypeErrorReporter.remove(),r.isDisplayInMeter(e)?(this.$("select[name=distanceUnit]").val("meter"),this.$("select[name=distanceUnit]").prop("disabled",!0)):this.$("select[name=distanceUnit]").prop("disabled",!1),!0)},onDistanceUnitChanged:function(){this.distanceValidator.validateInputNow(),this.autoCalcCalories()},onActivityNameChanged:function(){this.updateAddMoreUrl()},onActivityTypeChanged:function(){this.validateActivityType(),this.autoCalcCalories(),this.updateAddMoreUrl()},autoCalcCalories:function(){this.isAutoCalcCalories=!1;if(this.getWeightInKg()&&!this.caloriesOverridden){this.calorieValidator.clearReport();var e=this.$("select[data-key=activity_type]").val(),t=this.activityTypes.findByTypeKey(e);if(t){var n=this.elapsedTimeView.calculateTime()/3600,i=this.$("input[name=activitySummarySumDistance]").val(),s=this.$("select[name=distanceUnit]").val(),o=r.convertDistanceToCm(i,s)/100,u=Math.round(o/n*.000621371192*10)/10;this.autoCalcCaloriesValue=Math.round(g.determineMETS(t.get("typeKey"),u)*this.getWeightInKg()*n),this.$("input[name=activitySummarySumEnergy]").val(this.autoCalcCaloriesValue),this.isAutoCalcCalories=!0}}},updateAddMoreUrl:function(){var e=this.$("select[data-key=activity_type]").val(),t=this.$("input[name=activityName]").val();this.$(".btn-manual a")[0].href=y.url("/activity/manual/full?typeKey="+e+"&activityName="+t)},getWeightInKg:function(){if(this.personalInformation){var e=this.personalInformation.get("biometricProfile");if(e&&e.weight)return Math.round(e.weight/1e3*10)/10}return null},getTimezoneDTO:function(){return this.personalInformation&&this.personalInformation.get("timeZone")?{unitKey:this.personalInformation.get("timeZone")}:null},getTimezoneOffset:function(){if(this.personalInformation&&this.personalInformation.get("timeZone")){var e=this.personalInformation.get("timeZone"),t=a.getByKey(e);if(t)return+t.get("offset")}return 0},saveActivity:function(){var e=this.$("input[name=activityName]").val(),t=this.datePickerView.date,n=v.parseTime(this.timePickerView.time),i=new Date(t.getTime()+n*1e3),s=this.elapsedTimeView.calculateTime(),u=this.$("select[data-key=activity_type]").val(),a=this.$("select[data-key=event_type]").val(),f=this.activityTypes.findByTypeKey(u),l=this.eventTypes.findByTypeKey(a),c=this.distance,h=this.$("select[name=distanceUnit]").val();c=r.convertDistanceToCm(c,h)/100;var p=this.$("input[name=activitySummarySumEnergy]").val(),d=this.$("textarea[name=description]").val(),g={autoCalcCalories:this.isAutoCalcCalories},y={startTimeLocal:m.formatConnectTimestamp(i),distance:c,duration:s,calories:p};this.model.set({metadataDTO:g,summaryDTO:y,activityName:e,activityTypeDTO:f.toJSON(),eventTypeDTO:l.toJSON(),description:d,timeZoneUnitDTO:this.getTimezoneDTO(),accessControlRuleDTO:{typeId:o.getTypeIdFromTypeKey(this.privacyTypeId),typeKey:this.privacyTypeId}}),this.model.once("sync",this.onActivitySaveSuccess,this),this.model.once("error",this.onActivitySaveFailure,this),this.model.save()},onActivitySaveSuccess:function(){this.trigger(T.ON_ACTIVITY_SAVED,this.model),this.close()},onActivitySaveFailure:function(){alert(n.localize("error_saving_activity"))},onSaveButtonClicked:function(){this.validate()&&this.saveActivity()},destroyValidators:function(){e.each(this.validators,function(e){e.destroy()},this),this.activityTypeErrorReporter&&this.activityTypeErrorReporter.remove()},onCancelButtonClicked:function(){this.destroyValidators(),this.close()},close:function(){this.remove(),this.trigger("ON_VIEW_CLOSED")},onViewClosed:function(){this.destroyValidators()}});return N.Events=T,N}),define("text!widgets/activity/templates/ActivityWidgetAddNoteView.html",[],function(){return'<h6><%= Localizer.localize(\'notes\') %></h6>\n<textarea rows="5" class="input-block-level"><%= activity.description || \'\' %></textarea>\n<div class="pull-right">\n    <button class="add-note-cancel-btn btn top-xs btn-mini btn-secondary bottom-s"><%= Localizer.localize(\'button_cancel\') %></button>\n    <button class="add-note-save-btn btn top-xs btn-mini bottom-s"><%= Localizer.localize(\'button_save\') %></button>\n</div>\n\n'}),define("widgets/activity/views/ActivityWidgetAddNoteView",["underscore","backbone","localizer","text!widgets/activity/templates/ActivityWidgetAddNoteView.html"],function(e,t,n,r){var i={SaveClicked:"SaveClicked"},s=t.View.extend({events:{"click .add-note-save-btn":"onSaveClicked","click .add-note-cancel-btn":"onCancelClicked"},initialize:function(){this.template=e.template(r)},render:function(){this.$el.html(this.template({activity:this.model.toJSON(),Localizer:n}))},onSaveClicked:function(){var e=this.$(".input-block-level").val();this.model.set("description",e),this.trigger(i.SaveClicked),this.close()},onDescriptionSaveError:function(){alert(n.localize("error_saving_activity"))},onCancelClicked:function(){this.close()},close:function(){this.remove(),this.trigger("ON_VIEW_CLOSED")}});return s.Events=i,s}),define("models/segments/SegmentUserLeaderboard",["backbone"],function(e){var t=e.Model.extend({url:function(){return"/proxy/course-service/leaderboard/activity/"+this.activityId+"/segment/"+this.segmentUuid+"/rank/"+this.displayName},initialize:function(e){this.activityId=e.activityId,this.segmentUuid=e.segmentUuid,this.displayName=e.displayName;if(typeof this.activityId=="undefined"||this.activityId==null)throw"Activity ID required in SegmentUserLeaderboard.";if(!this.segmentUuid)throw"segmentUuid required in SegmentUserLeaderboard.";if(!this.displayName)throw"displayName required in SegmentUserLeaderboard."}});return t}),define("text!widgets/activity/templates/ActivityWidgetSegmentRowView.html",[],function(){return'<td class="segment-rank"><span class="segment-pill has-tooltip <%= cssClass %>" title="<%= tooltipText %>" data-placement="right"><%= segmentRank %></span></td>\n<td class="segment-name"><a href="#" class="segment-link colored" data-segmentuuid="<%= segmentResult.segmentUuid %>"><%= segmentResult.segmentName %></a></td>\n<td class="segment-fav"><i href="#" class="favorite-segment-trigger icon-star fav pull-right <%= segmentResult.favorite ? \'active\' : \'\' %>" data-segmentpk="<%= segmentResult.segmentPk %>" title="<%= Localizer.localize(\'tooltip.favorite\') %>"></i></td>\n'}),define("widgets/activity/views/ActivityWidgetSegmentRowView",["underscore","backbone","localizer","utils/ToolTipUtil","models/segments/SegmentUserLeaderboard","text!widgets/activity/templates/ActivityWidgetSegmentRowView.html"],function(e,t,n,r,i,s){var o=t.View.extend({tagName:"tr",events:{"click .segment-link":"onSegmentLinkClicked","click .favorite-segment-trigger":"onFavoriteButtonClicked"},initialize:function(t){this.segmentResult=t.segmentResult,this.activity=t.activity,this.template=e.template(s);if(!this.segmentResult)throw"segmentResult is required by ActivityWidgetSegmentRowView";if(!this.activity)throw"activity is required by ActivityWidgetSegmentRowView";this.segmentUserLeaderboard=new i({activityId:this.activity.id,segmentUuid:this.segmentResult.get("segmentUuid"),displayName:this.activity.get("ownerDisplayName")}),this.segmentUserLeaderboard.on("sync",this.render,this),this.segmentUserLeaderboard.fetch()},render:function(){var e=this.segmentResult.toJSON();e.bestUserRank=this.segmentUserLeaderboard.get("bestUserRank"),e.bestActivityElapsedTime=this.segmentUserLeaderboard.get("bestActivityElapsedTime"),e.bestElapsedTime=this.segmentUserLeaderboard.get("bestElapsedTime");var t=e.bestUserRank,i="",s="segment_overall_rank";if(t&&t>0&&t<4&&e.bestActivityElapsedTime===e.bestElapsedTime)i="top-three";else if(t==null||e.bestActivityElapsedTime!=e.bestElapsedTime)i="not-qualified",t="--",s="segment_not_fastest_time";this.activity.get("privacy").typeKey!="public"&&(i="not-qualified icon-locked",t="",s="segment_has_no_public_activity"),this.$el.html(this.template({Localizer:n,segmentResult:e,activity:this.activity.toJSON(),cssClass:i,segmentRank:t,tooltipText:n.localize(s,t)})),r.renderTooltips.call(this)},onSegmentLinkClicked:function(e){e.preventDefault();var n=jQuery(e.currentTarget).data("segmentuuid");t.history.navigate("/segment/"+n,{trigger:!0})},onFavoriteButtonClicked:function(e){e.preventDefault();var t=jQuery(e.currentTarget),n=this.segmentResult.get("favorite");n=!n,this.segmentResult.set("favorite",n),n?(this.segmentResult.save(),t.addClass("active")):(this.segmentResult.destroy(),t.removeClass("active"))}});return o}),define("text!widgets/activity/templates/ActivityWidgetSegmentsView.html",[],function(){return"<h5><%= Localizer.localize('segments') %></h5>\n\n<% if (segmentResults.length == 0) {                        %>\n\n    <p><%= Localizer.localize('activity_no_segments') %></p>\n\n<% } else {                                                 %>\n\n    <table class=\"table segments-list\">\n        <tbody>\n            <tr>\n                <th><%= Localizer.localize('segment_rank_title') %></th>\n                <th colspan=\"2\"><%= Localizer.localize('segment_name') %></th>\n            </tr>\n        </tbody>\n    </table>\n<% }                                                                                                    %>"}),define("widgets/activity/views/ActivityWidgetSegmentsView",["underscore","backbone","localizer","widgets/activity/views/ActivityWidgetSegmentRowView","text!widgets/activity/templates/ActivityWidgetSegmentsView.html"],function(e,t,n,r,i){var s=t.View.extend({initialize:function(t){if(!t.activity)throw"Activity required for ActivityWidgetSegementsView";this.template=e.template(i),this.activity=t.activity},render:function(){this.$el.html(this.template({Localizer:n,segmentResults:this.collection.toJSON(),activity:this.activity.toJSON()}));var e=this.$("tbody");this.collection.each(function(t){var n=new r({segmentResult:t,activity:this.activity});n.render(),e.append(n.el)},this)},onCancelClicked:function(){this.close()},close:function(){this.remove(),this.trigger("ON_VIEW_CLOSED")}});return s}),define("text!widgets/activity/templates/ActivityWidgetMultisportRowView.html",[],function(){return'<% if (activity.activityType.typeKey == \'transition\' || activityTypeParent.typeKey == \'transition\') { %>\n        <i class="icon-activity-transition" title="<%= Localizer.localize(\'activity_type_transition\') %>"></i>\n        <div class="span1 data-bit"><%= Personalizer.personalizeDuration(activity.duration) %></div>\n\n<% } else { %>\n\n        <!-- Map -->\n        <% if (activity.hasPolyline) { %>\n            <div class="activity-map map-placeholder-<%= activity.activityId %>" style="height: 60px; width: 60px; line-height: 10px; z-index: 1"></div>\n        <% } %>\n\n        <i class="icon-activity-<%= activityTypeClassMapper.map(activity.activityType.typeKey) %> h3"></i>\n        <div class="span1 data-bit"><%= Personalizer.personalizeDuration(activity.duration) %></div>\n        <div class="span1 data-bit pull-right"><%= Personalizer.personalizeSpeed(activity.averageSpeed, activity.activityType.typeKey, activity.distance) %> <%= Localizer.localize(Personalizer.getSpeedTypeKey(activity.activityType.typeKey, activity.distance)) %></div>\n\n<% } %>\n'}),define("widgets/activity/views/ActivityWidgetMultisportRowView",["underscore","backbone","localizer","personalizer","models/activity/ActivityPolyline","utils/ModelSynchronizer","utils/ActivityTypeCssClassMapper","views/map/MapView","text!widgets/activity/templates/ActivityWidgetMultisportRowView.html"],function(e,t,n,r,i,s,o,u,a){var f=t.View.extend({initialize:function(t){if(!t.activity)throw"Activity required for ActivityWidgetMultisportRowView";this.template=e.template(a),this.activity=t.activity,this.activityTypes=t.activityTypes},render:function(){var e=this.activityTypes.findByTypeId(this.activity.get("activityType").parentTypeId).toJSON();this.$el.html(this.template({Localizer:n,Personalizer:r,activity:this.activity.toJSON(),activityTypeParent:e,activityTypes:this.activityTypes.toJSONParentChild(),activityTypeClassMapper:o})),this.activity.get("hasPolyline")&&this.activity.get("activityType").typeKey!=="transition"&&(this.unloadMap(),this.displayMap(this.activity))},displayMap:function(e){var t=this.generateUniqueId();this.mapView=new u({mapContainerId:"map-container-"+e.get("activityId")+"-"+t,mapContainerClass:"",width:60,height:60,viewerIsAuthenticated:!0,disablePanning:!0,disableZooming:!0,enableBikeLanes:!1,showControlScale:!1,hideAttributionControl:!0,model:this.activity,activityId:e.get("activityId"),el:this.$(".map-placeholder-"+e.get("activityId"))}),this.mapView.activityId=e.get("activityId");var n=new i({activityId:e.get("activityId")}),r=new s;r.addEvent({model:this.mapView,event:u.Events.ON_MAP_READY,required:!0}),r.addModel({model:n,required:!0});var o=this;r.bind(s.Events.SYNCHRONIZED,function(){o.onPolylineReadyToRender(n)},this),r.fetchModels(),this.mapView.render(),this.mapView.loadMap()},generateUniqueId:function(){function e(){return Math.floor((1+Math.random())*65536).toString(16).substring(1)}return e()+e()+"-"+e()+"-"+e()+"-"+e()+"-"+e()+e()+e()},unloadMap:function(){this.mapView&&(this.mapView.off(),this.mapView.$el.empty(),this.mapView=null)},onPolylineReadyToRender:function(e){var t=e.get("gPolyline");if(t&&this.mapView&&t.activityId==this.mapView.activityId){var n=[],r=Garmin.Map.Utils.decodeLine(t.encodedSamples);for(var i=0;i<r.length;i++){var s=r[i],o=new Garmin.Map.Point(s[0],s[1]);n.push(o)}this.mapView.addPolyline(n,{width:2}),this.mapView.fitMapToPoints(n)}}});return f}),define("text!widgets/activity/templates/ActivityWidgetMultisportView.html",[],function(){return'<div class="multisport-children-placeholder"></div>\n<div class="text-center multisport-view-all" style="display: none"><a class="colored" href="/modern/activity/<%= activity.activityId %>"><%= Localizer.localize(\'view.all\') %></a></div>\n\n'}),define("widgets/activity/views/ActivityWidgetMultisportView",["underscore","backbone","localizer","widgets/activity/views/ActivityWidgetMultisportRowView","text!widgets/activity/templates/ActivityWidgetMultisportView.html"],function(e,t,n,r,i){var s=t.View.extend({initialize:function(t){if(!t.activityChildren)throw"Activity Children required for ActivityWidgetMultisportView";this.template=e.template(i),this.activity=t.activity,this.activityChildren=t.activityChildren,this.activityTypes=t.activityTypes},render:function(){this.$el.html(this.template({Localizer:n,activity:this.activity.toJSON()}));var e=this.$(".multisport-children-placeholder"),t=0,r=0;for(var i=0;i<this.activityChildren.length;i++){var s=this.activityChildren.at(i),o=this.activityTypes.findByTypeId(s.get("activityType").parentTypeId).toJSON();s.get("activityType").typeKey=="transition"||o.typeKey=="transition"?(r++,r<3&&e.append('<div class="widget-multisport-leg transition js-child-activity-'+s.get("activityId")+'"></div>')):(t++,t<4&&e.append('<div class="widget-multisport-leg js-child-activity-'+s.get("activityId")+'"></div>'))}t>3&&this.$(".multisport-view-all").show(),t=0,r=0;for(var i=0;i<this.activityChildren.length;i++){var s=this.activityChildren.at(i),o=this.activityTypes.findByTypeId(s.get("activityType").parentTypeId).toJSON();s.get("activityType").typeKey=="transition"||o.typeKey=="transition"?(r++,r<3&&this.appendRow(s)):(t++,t<4&&this.appendRow(s))}},appendRow:function(e){var t=this.$(".js-child-activity-"+e.get("activityId")),n=new r({el:t,activity:e,activityTypes:this.activityTypes});n.render()}});return s}),define("text!widgets/activity/templates/ActivityWidgetGearRowView.html",[],function(){return'<span class="gear-status"><div class="small spinner blue" title="Loading..."><div></div></div></span>\n<i class="icon-<%= rowClass %> gear-type"></i>\n<% if (gearStatusName === \'retired\') { %>\n     <span class="label"><%= Localizer.localize(\'label_status_retired\') %></span>\n<% } %><%= displayName %>'}),define("widgets/activity/views/ActivityWidgetGearRowView",["underscore","localizer","backbone","models/gear_tracking/Gear","text!widgets/activity/templates/ActivityWidgetGearRowView.html"],function(e,t,n,r,i){var s={GearAdded:"GearAdded",GearRemoved:"GearRemoved",LinkUnlinkError:"LinkUnlinkError",GearItemClicked:"GearItemClicked"},o=n.View.extend({template:e.template(i),tagName:"li",attributes:function(){var e=r.getFullGearDisplayNameByModel(this.model);return{title:function(){return e}}},events:{click:"onGearClicked"},initialize:function(e){return this.category=e.category,this.activityId=e.activityId,this.isSelected=e.isSelected,this.setAttributes(),this},setAttributes:function(){var e=this.isSelected||!1;e&&this.$el.addClass("active")},render:function(){return this.$el.html(this.template({Localizer:t,displayName:r.getFullGearDisplayNameByModel(this.model),gearStatusName:this.model.gearStatusName,rowClass:this.category.rowClass,isSelected:this.isSelected})),this},onGearClicked:function(e){function i(e,i,o){n?(t.removeClass("active"),r.triggerEvent(s.GearRemoved)):(t.addClass("active"),r.triggerEvent(s.GearAdded))}function o(e,t,n){r.triggerEvent(s.LinkUnlinkError,{jqHRX:e,textStatus:t,errorThrown:n})}var t=$(e.currentTarget),n=t.hasClass("active")||!1,r=this;r.triggerEvent(s.GearItemClicked);var u={type:"POST",beforeSend:function(e){e.setRequestHeader("X-HTTP-Method-Override","PUT")},cache:!1,url:"/modern/proxy/gear-service/gear/"+(n?"unlink/":"link/")+this.model.uuid+"/activity/"+this.activityId,success:i,error:o};$.ajax(u)},triggerEvent:function(e,t){this.trigger(e,t||this.model)}});return o.Events=s,o}),define("text!widgets/activity/templates/ActivityWidgetGearListView.html",[],function(){return""}),define("widgets/activity/views/ActivityWidgetGearListView",["underscore","localizer","backbone","models/gear_tracking/Gear","widgets/activity/views/ActivityWidgetGearRowView","text!widgets/activity/templates/ActivityWidgetGearListView.html"],function(e,t,n,r,i,s){var o={GearAddedPropagated:"GearAddedPropagated",GearRemovedPropagated:"GearRemovedPropagated",LinkUnlinkErrorPropagated:"LinkUnlinkErrorPropagated",GearItemClickedPropagated:"GearItemClickedPropagated"},u=n.View.extend({template:e.template(s),tagName:"ul",attributes:function(){return{"class":function(){return"gear-list"}}},initialize:function(e){return this.category=e.category,this.activityId=e.activityId,this.selectedGears=e.selectedGears,this},render:function(){this.$el.html(this.template({Localizer:t,title:this.category.title})),this.collection=e.sortBy(this.collection,function(e){return r.getFullGearDisplayNameByModel(e)});if(this.collection&&this.collection.length>0)for(var n=0;n<this.collection.length;n++)this.$el.append(this.createNewActivityWdgetGearRowView(this.collection[n]));return this},createNewActivityWdgetGearRowView:function(e){var t=new i({model:e,category:this.category,activityId:this.activityId,isSelected:this.isSelected(e.uuid)});return t.on(i.Events.GearAdded,function(e){this.trigger(o.GearAddedPropagated,e)},this),t.on(i.Events.GearRemoved,function(e){this.trigger(o.GearRemovedPropagated,e)},this),t.on(i.Events.LinkUnlinkError,function(e){this.trigger(o.LinkUnlinkErrorPropagated,e)},this),t.on(i.Events.GearItemClicked,function(e){this.trigger(o.GearItemClickedPropagated,e)},this),t.render().el},isSelected:function(t){if(this.selectedGears&&this.selectedGears.length>0){var n=e.where(this.selectedGears.models,{id:t});return n&&n.length>0}return!1}});return u.Events=o,u}),define("text!widgets/activity/templates/ActivityWidgetGearView.html",[],function(){return'<% if (availableGears && availableGears.length === 0) { %>\n    <h5 class="font-thin text-center"><%= Localizer.localize(\'label_no_gear_available\') %></h5>\n    <div class="text-center top-xs">\n        <a href="/modern/gear/add" class="colored"><%= Localizer.localize(\'label_add_gear\') %></a>\n    </div>\n<% } else { %>\n    <!-- System error when saving gear -->\n    <div class="alert alert-error" style="display:none;">\n        <p><%= Localizer.localize(\'gear_crud_error\') %></p>\n    </div>\n\n    <!-- List of Gear -->\n\n<% } %>\n'}),define("widgets/activity/views/ActivityWidgetGearView",["underscore","backbone","localizer","widgets/activity/views/ActivityWidgetGearListView","text!widgets/activity/templates/ActivityWidgetGearView.html"],function(e,t,n,r,i){var s={UpdateGearCount:"UpdateGearCount"},o=t.View.extend({template:e.template(i),events:{"click .close-js":"onCancelClicked"},initialize:function(e){return this.availableGears=e.availableGears,this.gearTypes=e.gearTypes,this.activityId=e.activityId,this.collection.on("remove",function(){this.triggerEvent(s.UpdateGearCount)},this),this.collection.on("add",function(){this.triggerEvent(s.UpdateGearCount)},this),this},render:function(){this.$el.html(this.template({Localizer:n,availableGears:this.availableGears||[]}));if(this.availableGears&&this.availableGears.length>0){var t=0,r=this.availableGears.toJSON(),i=this.gearTypes.toJSON(),s=i.length,o=[];for(var t in i){var u=i[t];if(u){var a=u.gearTypeName,f=e.where(r,{gearTypeName:a});f&&f.length>0&&(o[a]=this.createActivityWidgetGearListView(f,a))}}this.orderGearList(o),this.renderFooter()}return this},renderFooter:function(){var e=n.localize("label_manage_gear");this.$el.append('<div class="text-center top-xs"><a href="/modern/gear" class="colored">'+e+"</a>"+"</div>")},orderGearList:function(t){var r=["Shoes","Bike","Other"];for(var i=0;i<r.length;i+=1)if(r[i]&&e.has(t,r[i])){var s=n.localize(this.getGearCategoryData(r[i]).title);this.$el.append('<h6 class="bottom-none">'+s+"</h6>"),this.$el.append(t[r[i]])}},createActivityWidgetGearListView:function(e,t){var n=new r({category:this.getGearCategoryData(t),activityId:this.activityId,collection:e,selectedGears:this.collection});return n.on(r.Events.GearAddedPropagated,function(e){this.doesGearExitInModel(e)||this.collection.add(e)},this),n.on(r.Events.GearRemovedPropagated,function(e){for(var t=0;t<this.collection.models.length;t+=1)this.collection.models[t].get("uuid")===e.uuid&&this.collection.remove(this.collection.models[t])},this),n.on(r.Events.LinkUnlinkErrorPropagated,function(e){this.showErrorMessage(!0)},this),n.on(r.Events.GearItemClickedPropagated,function(e){this.showErrorMessage(!1)},this),n.render().el},doesGearExitInModel:function(t){var n=e.find(this.collection.models,function(e){return e.get("uuid")===t.uuid});return n||!1},getGearCategoryData:function(e){switch(e.toUpperCase()){case"SHOES":return{rowClass:"steps",title:"gear_type_shoes"};case"BIKE":return{rowClass:"activity-cycling",title:"gear_type_bikes"};case"OTHER":return{rowClass:"gear",title:"gear_type_other"};default:return{rowClass:"",title:""}}},showErrorMessage:function(e){var t=this.$(".alert-error");t&&t.length>0&&t.css({display:e?"inline-block":"none"})},onCancelClicked:function(){this.close()},close:function(){this.remove(),this.trigger("ON_VIEW_CLOSED")},triggerEvent:function(e,t){this.trigger(e,t)}});return o.Events=s,o}),define("text!widgets/activity/templates/ActivityWidgetDataView.html",[],function(){return'<% if(isApneaActivity) { %>\n\n    <div class="row-fluid top-xs bottom-none">\n        <div class="span4 data-1">\n            <div class="h5 data-bit"><%= Personalizer.personalizeDepth(activity.maxDepth) %> <%= Localizer.localize(Personalizer.getDepthUnitKey()) %></div>\n            <span title="<%= Localizer.localize(\'deepest_dive\') %>" class="data-label"><%= Localizer.localize(\'deepest_dive\') %></span>\n        </div>\n        <div class="span4 data-1">\n            <div id="js-calories" class="h5 data-bit"><%= Personalizer.personalizeDuration(activity.bottomTime, false) %></div>\n            <span title="<%= Localizer.localize(\'session_bottom_time\') %>" class="data-label"><%= Localizer.localize(\'session_bottom_time\') %></span>\n        </div>\n        <div class="span4 data-1">\n            <div class="h5 data-bit"><%= activity.lapCount %></div>\n            <span class="data-label" title="<%= Localizer.localize(\'label_num_dives\') %>"><%= Localizer.localize(\'label_num_dives\') %></span>\n        </div>\n    </div>\n\n<% } else if(!isStrengthTrainingActivity) { %>\n    <% if(showSimpleStats) { %>\n        <div class="row-fluid top-m bottom-m">\n            <div class="span4 data-1">\n                <div class="h5 data-bit"><%= Personalizer.personalizeDuration(activity.duration) %></div>\n                <span title="<%= Localizer.localize(\'label_time\') %>" class="data-label"><%= Localizer.localize(\'label_time\') %></span>\n            </div>\n            <div class="span4 data-1">\n                <div id="js-calories" class="h5 data-bit"><%= Personalizer.formatWholeNumber(activity.calories) %></div>\n                <span title="<%= Localizer.localize(\'label_calories\') %>" class="data-label"><%= Localizer.localize(\'label_calories\') %></span>\n            </div>\n            <div class="span4 data-1">\n                <div class="h5 data-bit"><%= avgHR %> <%= Localizer.localize(\'heart_rate_unit\') %></div>\n                <span class="data-label" title="<%= Localizer.localize(\'label_avg_heart_rate\') %>"><%= Localizer.localize(\'label_avg_HR\') %></span>\n            </div>\n        </div>\n    <% } else { %>\n        <div class="row-fluid top-xs">\n            <div class="span4 data-1">\n                <div class="h5 data-bit"><%= Personalizer.personalizeDistance(activity.distance, activity.activityType.typeKey, activity.unitOfPoolLength) %> <%= Localizer.localize(Personalizer.getDistanceUnitKey(activity.activityType.typeKey, activity.distance, activity.unitOfPoolLength)) %></div>\n                <% if (activity.parent) { %>\n                <span title="<%= Localizer.localize(\'label_distance_total\') %>" class="data-label"><%= Localizer.localize(\'label_distance_total\') %></span>\n                <% } else { %>\n                <span title="<%= Localizer.localize(\'label_distance\') %>" class="data-label"><%= Localizer.localize(\'label_distance\') %></span>\n                <% } %>\n            </div>\n            <div class="span4 data-1">\n                <div class="h5 data-bit"><%= Personalizer.personalizeDuration(activity.duration) %></div>\n                <% if (activity.parent) { %>\n                <span title="<%= Localizer.localize(\'label_time_total\') %>" class="data-label"><%= Localizer.localize(\'label_time_total\') %></span>\n                <% } else { %>\n                <span title="<%= Localizer.localize(\'label_time\') %>" class="data-label"><%= Localizer.localize(\'label_time\') %></span>\n                <% } %>\n            </div>\n            <% if (!activity.parent) { %>\n            <div class="span4 data-1">\n                <div class="h5 data-bit"><%= Personalizer.personalizeSpeed(activity.averageSpeed, activity.activityType.typeKey, activity.unitOfPoolLength ? activity.unitOfPoolLength.unitKey : activity.distance) %></div>\n                <span class="data-label" title="<%= Localizer.localize(Personalizer.getSpeedTypeLabelKey(activity.activityType.typeKey, null, false)) %> (<%= Localizer.localize(Personalizer.getSpeedTypeKey(activity.activityType.typeKey, activity.distance, activity.unitOfPoolLength)) %>)">\n                    <%= Localizer.localize(Personalizer.getSpeedTypeLabelKey(activity.activityType.typeKey, null, true)) %> (<%= Localizer.localize(Personalizer.getSpeedTypeKey(activity.activityType.typeKey, activity.distance, activity.unitOfPoolLength)) %>)\n                </span>\n            </div>\n            <% } %>\n        </div>\n\n        <% if (!activity.parent) { %>\n        <div class="row-fluid top-xs">\n            <div class="span4 data-1">\n                <div id="js-calories" class="h5 data-bit"><%= Personalizer.formatWholeNumber(activity.calories) %></div>\n                <span title="<%= Localizer.localize(\'label_calories\') %>" class="data-label"><%= Localizer.localize(\'label_calories\') %></span>\n            </div>\n            <div class="span4 data-1">\n                <div class="h5 data-bit"><%= Personalizer.personalizeElevation(activity.elevationGain) %> <%= Localizer.localize(Personalizer.getElevationUnitKey()) %></div>\n                <span title="<%= Localizer.localize(Personalizer.getElevGainLabelKey(activity.activityType.typeKey)) %>" class="data-label"><%= Localizer.localize(Personalizer.getElevGainLabelKey(activity.activityType.typeKey, true)) %></span>\n            </div>\n        </div>\n        <% } %>\n    <% } %>\n\n<% } else { %>\n    <div class="row-fluid top-xs">\n        <div class="span4 data-1">\n            <div class="h5 data-bit"><%= Personalizer.personalizeDuration(totalTime) %></div>\n            <span class="data-label" title="<%= Localizer.localize(\'label_time_total\') %>"><%= Localizer.localize(\'label_time_total\') %></span>\n        </div>\n        <div class="span4 data-1">\n            <div class="h5 data-bit"><%= sets %></div>\n            <span class="data-label" title="<%= Localizer.localize(\'label_total_sets\') %>"><%= Localizer.localize(\'label_total_sets\') %></span>\n        </div>\n        <div class="span4 data-1">\n            <div class="h5 data-bit"><%= avgHR %> <%= Localizer.localize(\'heart_rate_unit\') %></div>\n            <span class="data-label" title="<%= Localizer.localize(\'label_avg_heart_rate\') %>"><%= Localizer.localize(\'label_avg_HR\') %></span>\n        </div>\n    </div>\n\n    <div class="row-fluid top-xs">\n        <div class="span4 data-1">\n            <div class="h5 data-bit"><%= Personalizer.personalizeDuration(workTime) %></div>\n            <span class="data-label" title="<%= Localizer.localize(\'label_work_time\') %>"><%= Localizer.localize(\'label_work_time\') %></span>\n        </div>\n        <div class="span4 data-1">\n            <div class="h5 data-bit"><%= reps %></div>\n            <span class="data-label" title="<%= Localizer.localize(\'label_total_reps\') %>"><%= Localizer.localize(\'label_total_reps\') %></span>\n        </div>\n        <div class="span4 data-1">\n            <div class="h5 data-bit"><%= maxHR %> <%= Localizer.localize(\'heart_rate_unit\') %></div>\n            <span class="data-label" title="<%= Localizer.localize(\'max.heart.rate\') %>"><%= Localizer.localize(\'label_max_HR\') %></span>\n        </div>\n    </div>\n<% } %>'}),define("widgets/activity/views/ActivityWidgetDataView",["require","underscore","backbone","localizer","personalizer","text!widgets/activity/templates/ActivityWidgetDataView.html"],function(e){var t=e("underscore"),n=e("backbone"),r=e("localizer"),i=e("personalizer"),s=e("text!widgets/activity/templates/ActivityWidgetDataView.html"),o=n.View.extend({template:t.template(s),initialize:function(e){this.activity=e.activity,this.isStrengthTrainingActivity=e.isStrengthTrainingActivity,this.repCountingActivity=e.repCountingActivity,this.showSimpleStats=e.showSimpleStats,this.isApneaActivity=e.isApneaActivity},render:function(){this.isApneaActivity?this.renderApneaActivity():this.isStrengthTrainingActivity?this.renderStrengthTrainingActivity():this.renderNormalActivity()},renderNormalActivity:function(){var e=i.zeroDash(this.activity.averageHR);this.$el.html(this.template({Localizer:r,Personalizer:i,activity:this.activity,isStrengthTrainingActivity:!1,showSimpleStats:this.showSimpleStats,avgHR:e,isApneaActivity:!1}))},renderStrengthTrainingActivity:function(){var e,t=i.zeroDash(this.repCountingActivity.getWorkTime()),n=i.zeroDash(this.repCountingActivity.getActiveSetCount()),s=i.zeroDash(this.repCountingActivity.getTotalRepCount()),o=i.zeroDash(this.activity.averageHR),u=i.zeroDash(this.activity.maxHR);this.repCountingActivity&&this.repCountingActivity.get("exerciseSets")&&this.repCountingActivity.get("exerciseSets").length>0?e=i.zeroDash(this.repCountingActivity.getTotalTime()):e=i.zeroDash(this.activity.duration),this.$el.html(this.template({Localizer:r,Personalizer:i,activity:this.activity,isStrengthTrainingActivity:!0,totalTime:e,workTime:t,sets:n,reps:s,avgHR:o,maxHR:u,isApneaActivity:!1}))},renderApneaActivity:function(){this.$el.html(this.template({Localizer:r,Personalizer:i,activity:this.activity,isApneaActivity:this.isApneaActivity}))}});return o}),define("text!templates/dive/diveLogStatView.html",[],function(){return'<div class="dive-log-stat <%= className %>-stat font-thin <%= additionalClasses %>">\n    <div class="<%= className %>-value dive-log-value">\n        <%= value %>\n    </div>\n    <span class="<%= className %>-label dive-log-label">\n        <%= label %>\n    </span>\n</div>'}),define("text!templates/dive/diveLogView.html",[],function(){return'<div class="dive-canvas">\n    <canvas id="canvas" class="canvas"></canvas>\n    <!-- diveLogStatView.html -->\n\n</div>\n'}),define("views/dive/DiveLogView",["require","underscore","backbone","personalizer","localizer","moment","utils/date/DateParser","utils/date/DateFormatter","text!templates/dive/diveLogStatView.html","text!templates/dive/diveLogView.html"],function(e){var t=e("underscore"),n=e("backbone"),r=e("personalizer"),i=e("localizer"),s=e("moment"),o=e("utils/date/DateParser"),u=e("utils/date/DateFormatter"),a=e("text!templates/dive/diveLogStatView.html"),f=e("text!templates/dive/diveLogView.html"),l={LARGE:{grayLineWidth:4,point1:{x:0,y:67},point2:{x:150,y:67},point3:{x:200,y:200},orangeLineWidth:2,orangeLineY:134},SMALL:{grayLineWidth:3,point1:{x:0,y:50},point2:{x:105,y:50},point3:{x:142,y:150},orangeLineWidth:2,orangeLineY:100},WIDGET:{grayLineWidth:1,point1:{x:0,y:25},point2:{x:70,y:25},point3:{x:95,y:118},orangeLineWidth:1,orangeLineY:72}};return n.View.extend({template:t.template(f),initialize:function(e){this.surfaceInterval=e.surfaceInterval,this.timeIn=e.timeIn,this.maxDepth=e.maxDepth,this.avgDepth=e.avgDepth,this.bottomTime=e.bottomTime,this.isDecoDive=e.isDecoDive,this.timeOut=e.timeOut},render:function(){var e=this.template({});return this.$el.html(e),this.renderCanvas(),this.renderDiveLogStats(),this},renderCanvas:function(){var e=this.$("#canvas")[0],t=e.getContext("2d");e.style.width="100%",e.style.height="100%",e.width=e.offsetWidth,e.height=e.offsetHeight;if(e.width===0)return;this.drawLeftSide(e,t),t.save(),this.drawRightSide(e,t),t.restore()},drawLeftSide:function(e,t){var n=this.getDrawOptions(e.width);t.strokeStyle="#999999",t.lineWidth=n.grayLineWidth,t.beginPath(),t.moveTo(n.point1.x,n.point1.y),t.lineTo(n.point2.x,n.point2.y),t.lineTo(n.point3.x,n.point3.y),t.lineTo(e.width/2,n.point3.y),t.stroke(),t.strokeStyle="#ff9f10",t.lineWidth=n.orangeLineWidth,t.beginPath(),t.moveTo(0,n.orangeLineY),t.lineTo(e.width/2,n.orangeLineY),t.stroke()},drawRightSide:function(e,t){t.translate(e.width,0),t.scale(-1,1),this.drawLeftSide(e,t)},renderDiveLogStats:function(){var e=this.$("#canvas")[0],n=e.width,f=t.template(a),l=this.$(".dive-canvas"),c=f({className:"surface-interval",additionalClasses:"",value:this.getSurfaceIntervalValue(n,this.surfaceInterval),label:this.getSurfaceIntervalLabel(n)});l.append(c);var h=o.parseISO(this.timeIn),p=f({className:"time-in",additionalClasses:"",value:u.formatTime(h),label:i.localize("time_in_label")});l.append(p);var d=f({className:"max-depth",additionalClasses:"",value:r.personalizeDepth(this.maxDepth)+" "+i.localize(r.getDepthUnitKey()),label:i.localize("max_depth")});l.append(d);var v=f({className:"avg-depth",additionalClasses:"center",value:r.personalizeDepth(this.avgDepth)+" "+i.localize(r.getDepthUnitKey()),label:i.localize("avg_depth_abbr")});l.append(v);var m=f({className:"bottom-time",additionalClasses:"center",value:r.personalizeDuration(this.bottomTime,!1),label:i.localize("bottom_time")});l.append(m);if(this.isDecoDive){var g=f({className:"deco-dive",additionalClasses:"right decompression-dive-icon",value:"D",label:i.localize("deco_dive_label")});l.append(g)}var y=(new s(h)).add(this.bottomTime,"s").toDate(),b=f({className:"time-out",additionalClasses:"right",value:u.formatTime(y),label:i.localize("time_out_label")});l.append(b)},getSurfaceIntervalValue:function(e,t){return this.isWidget(e)?i.localize("surface_interval_abbrev")+": "+r.personalizeDuration(t,!1):r.personalizeDuration(t,!1)},getSurfaceIntervalLabel:function(e){return this.isWidget(e)?"":i.localize("surface_interval")},getDrawOptions:function(e){return this.isWidget(e)?l.WIDGET:e>=300&&e<=550?l.SMALL:l.LARGE},isWidget:function(e){return e<300},destroy:function(){this.remove()}})}),define("text!templates/dive/ApneaSessionItem.html",[],function(){return'<div class="apnea-session-item top-xs">\n    <div class="apnea-number left-xs"><%= index %></div>\n    <div class="apnea-stats right-xs">\n        <div><%= Localizer.localize(\'max_depth\') %>:&nbsp;<%= Personalizer.personalizeDepth(maxDepth) %>&nbsp;<%= Localizer.localize(Personalizer.getDepthUnitKey()) %></div>\n        <div><%= Localizer.localize(\'bottom_time\') %>:&nbsp;<%= Personalizer.personalizeDuration(bottomTime, false) %></div>\n        <div><%= Localizer.localize(\'surface_interval\') %>:&nbsp;<%= Personalizer.personalizeDuration(surfaceInterval, false) %></div>\n    </div>\n    <div class="apnea-map"></div>\n</div>\n'}),define("views/dive/ApneaSessionItem",["require","underscore","backbone","personalizer","localizer","views/map/MapView","views/map/MapViewUtils","text!templates/dive/ApneaSessionItem.html"],function(e){var t=e("underscore"),n=e("backbone"),r=e("personalizer"),i=e("localizer"),s=e("views/map/MapView"),o=e("views/map/MapViewUtils"),u=e("text!templates/dive/ApneaSessionItem.html");return n.View.extend({template:t.template(u),initialize:function(e){this.dive=e.dive,this.number=e.number,this.mapProvider=e.mapProvider,this.userMapSetting=e.userMapSetting},render:function(){var e=this.template({index:this.number,maxDepth:this.dive.maxDepth,bottomTime:this.dive.bottomTime,surfaceInterval:this.dive.surfaceInterval,startLatitude:this.dive.startLatitude,startLongitude:this.dive.startLongitude,Localizer:i,Personalizer:r});return this.$el.html(e),this.dive.startLatitude&&this.dive.startLongitude&&(this.mapView=new s({el:this.$(".apnea-map"),mapContainerId:"map-container-"+(new Date).getTime(),mapProvider:this.mapProvider,disablePanning:!0,disableZooming:!0,mapStyle:"road",showMenu:!1,useCustomMapControls:!0,width:77,height:55,viewerIsAuthenticated:!0,cursorStyle:"default",enableBikeLanes:!1,showControlScale:!1}),this.listenTo(this.mapView,s.Events.ON_MAP_READY,function(){var e=[{lat:this.dive.startLatitude,lon:this.dive.startLongitude}];this.mapView.fitMapToPoints(e),this.mapView.addMarker(e[0].lat,e[0].lon,o.getSmallStartMarkerOptions())}),this.mapView.render(),this.mapView.loadMap()),this}})}),define("text!templates/dive/ApneaSessionList.html",[],function(){return'<div class="apnea-session-list">\n    <!-- ApneaSessionItem.html -->\n</div>\n<% if (hasMoreDives) { %>\n<a class="apnea-view-all" href="<%= viewAllLink %>"><%= Localizer.localize(\'view.all\') %></a>\n<% } %>'}),define("views/dive/ApneaSessionList",["require","underscore","backbone","localizer","utils/NavigationUtil","views/dive/ApneaSessionItem","text!templates/dive/ApneaSessionList.html"],function(e){var t=e("underscore"),n=e("backbone"),r=e("localizer"),i=e("utils/NavigationUtil"),s=e("views/dive/ApneaSessionItem"),o=e("text!templates/dive/ApneaSessionList.html");return n.View.extend({template:t.template(o),initialize:function(e){this.dives=e.dives,this.mapProvider=e.mapProvider,this.userMapSetting=e.userMapSetting,this.activityId=e.activityId},render:function(){var e=this.template({hasMoreDives:this.dives.length>3,viewAllLink:i.url("/activity/"+this.activityId),Localizer:r});return this.$el.html(e),this.renderApneaDives(),this},renderApneaDives:function(){var e,t;for(var n=0;n<Math.min(3,this.dives.length);n++)t=this.dives[n],e=(new s({number:n+1,dive:t,mapProvider:this.mapProvider,userMapSetting:this.userMapSetting})).render(),this.$(".apnea-session-list").append(e.el)}})}),define("text!widgets/activity/templates/recentActivity.html",[],function(){return'<div class="data-1">\n    <h4 class="clearfix">\n        <i class="icon-activity-<%= activityTypeClassMapper.map(activity.activityType.typeKey) %> widget-activity-identifier pull-left right-xs"></i>\n        <div class="js-activityNameEditPlaceholder">\n\n        </div>\n    </h4>\n\n    <div class="row-fluid">\n        <% if (activity.hasVideo) { %>\n            <span class="label-video label-dk-grey pull-left" title="<%= Localizer.localize(\'video\') %>"><%= Localizer.localize(\'video\') %></span>\n        <% } %>\n        <div class="widget-activity-type right-xs pull-left"></div>\n        <div class="widget-activity-event pull-left"></div>\n    </div>\n</div>\n\n<div id="activity-data-placeholder">\n    <!-- ActivityWidgetDataView.html goes here -->\n</div>\n\n<%\nvar favoriteClass = activity.favorite ? \'active\' : \'\';\nvar segmentCount = segments ? segments.length : 0;\nvar segmentsStyle = segments && segmentsEnabled ? \'\' : \'display: none\';\nvar gearCount = gears ? gears.length : 0;\nvar gearStyle = gearCount > 0 ? \'\' : \'display: none\';\n\n%>\n<div class="row-fluid activities-other-attributes">\n    <button class="icon-star fav <%= favoriteClass %> activity-favorite"></button>\n    <button class="icon-pencil-with-note activity-notes-trigger" title="<%= activity.description || \'\' %>"></button>\n    <button class="icon-segments segments-trigger" style="<%= segmentsStyle %>">\n        <span class="segment-notification-count notification-count"  style="<%= segmentsStyle %>"><%= segmentCount %></span>\n    </button>\n    <button class="icon-steps gear-trigger" data-prototype="#gear-sheet-with-gear" style="display: <%= showGearIcon === true ? \'inline-block\' : \'none\' %>" >\n        <span class="notification-count"  style="<%= gearStyle %>"><%= gearCount || 0 %></span>\n    </button>\n</div>\n\n<% if (activity.parent) { %>\n<div class="widget-accessory widget-multisport-legs">\n    <div class="multisport-activity-placeholder"></div>\n</div>\n<% } else {                                                                                     %>\n\n<% if (isApneaActivity) { %>\n\n<div class="apnea-container"></div>\n\n<% } else if (activity.hasPolyline) {                                                                %>\n<div class="map-container widget-accessory">\n    <div><div class="widget-map"></div></div>\n    <div class="map-controls"></div>\n</div>\n<% } else {                                                                                     %>\n    <div class="chart-container">\n        <div class="chart chart-widget chart-heart-rate"></div>\n    </div>\n<% }                                                                                            %>\n<% }                                                                                            %>'}),define("text!widgets/activity/templates/noData.html",[],function(){return'<div class="text-center">\n    <h5 class="font-thin top-l"><%= Localizer.localize(\'you_have_no_activities\') %></h5>\n    <h5 class="font-thin"><%= Localizer.localize(\'use.garmin.device\') %> <a href="#" class="colored no-data-add-activity"><%= Localizer.localize(\'add.activity\') %></a>.</h5>\n    <div class="background-icon absolute-bottom">\n        <i class="icon-activities"></i>\n    </div>\n</div>'}),define("widgets/activity/states/RecentActivityState",["require","underscore","localizer","models/activity/ActivityPolyline","models/activity/ActivityDetails","models/activity/ActivitySummary","models/activity/SummarizedActivity","models/segments/SegmentOptionalFeature","models/user/UserMapSetting","models/activity/ActivityCount","models/activity/RepCountingActivity","models/user/UserPreference","models/segments/StravaOptionalFeature","collections/activity/ActivitySplits","collections/profile/UserProfileActivities","collections/activity/ActivityTypes","collections/activity/EventTypes","collections/activity/ActivityChildren","collections/segments/SegmentResultsByActivityId","models/user/ViewerUserBiometrics","collections/gear_tracking/Gears","collections/gear_tracking/GearTypes","views/main/WidgetStateView","views/map/MapView","views/map/MapViewUtils","views/map/SmallMapControlsView","views/sharing/ShareStaticMapImageView","views/utils/InlineEditView","views/utils/InlineDropDownListView","pages/activities/views/DivingActivityNameInlineEditView","utils/ModelSynchronizer","utils/ActivityTypeCssClassMapper","utils/ActivityTypeMapper","utils/NavigationUtil","utils/CalorieUtil","utils/date/DateFormatter","utils/date/DateParser","utils/activity/ActivitiesUtil","constants/main/ApplicationEvents","widgets/activity/views/HRChartView","widgets/activity/views/ManualEditView","widgets/activity/views/ActivityWidgetAddNoteView","widgets/activity/views/ActivityWidgetSegmentsView","widgets/activity/views/ActivityWidgetMultisportView","widgets/activity/views/ActivityWidgetGearView","widgets/activity/views/ActivityWidgetDataView","views/dive/DiveLogView","views/dive/ApneaSessionList","text!widgets/activity/templates/recentActivity.html","text!widgets/activity/templates/noData.html"],function(e){var t=e("underscore"),n=e("localizer"),r=e("models/activity/ActivityPolyline"),i=e("models/activity/ActivityDetails"),s=e("models/activity/ActivitySummary"),o=e("models/activity/SummarizedActivity"),u=e("models/segments/SegmentOptionalFeature"),a=e("models/user/UserMapSetting"),f=e("models/activity/ActivityCount"),l=e("models/activity/RepCountingActivity"),c=e("models/user/UserPreference"),h=e("models/segments/StravaOptionalFeature"),p=e("collections/activity/ActivitySplits"),d=e("collections/profile/UserProfileActivities"),v=e("collections/activity/ActivityTypes"),m=e("collections/activity/EventTypes"),g=e("collections/activity/ActivityChildren"),y=e("collections/segments/SegmentResultsByActivityId"),b=e("models/user/ViewerUserBiometrics"),w=e("collections/gear_tracking/Gears"),E=e("collections/gear_tracking/GearTypes"),S=e("views/main/WidgetStateView"),x=e("views/map/MapView"),T=e("views/map/MapViewUtils"),N=e("views/map/SmallMapControlsView"),C=e("views/sharing/ShareStaticMapImageView"),k=e("views/utils/InlineEditView"),L=e("views/utils/InlineDropDownListView"),A=e("pages/activities/views/DivingActivityNameInlineEditView"),O=e("utils/ModelSynchronizer"),M=e("utils/ActivityTypeCssClassMapper"),_=e("utils/ActivityTypeMapper"),D=e("utils/NavigationUtil"),P=e("utils/CalorieUtil"),H=e("utils/date/DateFormatter"),B=e("utils/date/DateParser"),j=e("utils/activity/ActivitiesUtil"),F=e("constants/main/ApplicationEvents"),I=e("widgets/activity/views/HRChartView"),q=e("widgets/activity/views/ManualEditView"),R=e("widgets/activity/views/ActivityWidgetAddNoteView"),U=e("widgets/activity/views/ActivityWidgetSegmentsView"),z=e("widgets/activity/views/ActivityWidgetMultisportView"),W=e("widgets/activity/views/ActivityWidgetGearView"),X=e("widgets/activity/views/ActivityWidgetDataView"),V=e("views/dive/DiveLogView"),J=e("views/dive/ApneaSessionList"),K=e("text!widgets/activity/templates/recentActivity.html"),Q=e("text!widgets/activity/templates/noData.html"),G=30;return S.extend({titleKeyName:"title_activities_widget_list",menuKeyName:"title_activities_widget_recent_activity",headerUrl:"/activities",name:"recentActivity",stateClassName:"widget-large widget-activities",templateHtml:K,noDataTemplateHtml:Q,enableConversation:!0,conversationResourceType:"ACTIVITY",navigationDirection:"left",shareUrl:function(){var e=this.getCurrentActivity();return e?"/activity/"+e.id:""},sharePrivacy:function(){var e=this.getCurrentActivity();return e?e.get("privacy").typeKey:"private"},createShareView:function(e,t){var n=this.getCurrentActivity();return new C({privacy:e,url:t,locale:this.userPreferences.get("preferredLocale"),customClasses:"widget-dropdown widget-footer-action",slideDirection:C.SlideDirection.Up,currentActivity:n,mapProviderPreference:this.mapProviderPreference,hasMap:n.get("hasPolyline")})},events:{"click .activity-favorite":"onFavoriteClicked","click .activity-notes-trigger":"onAddNoteClicked","click .segments-trigger":"onSegmentsButtonClicked","click .no-data-add-activity":"onAddButtonClicked","click .gear-trigger":"onGearButtonClicked"},applicationEvents:{ACTIVITY_ADDED:"onApplicationEventActivityAdded",ACTIVITY_CHANGED:"onApplicationEventActivityChanged",SEGMENT_OPTED_IN_CHANGED:"onSegmentOptedInChanged"},menuGroups:[{groupName:"activityMenu",menuItems:[{key:"add_manual_activity",handlerName:"onAddButtonClicked",index:0,icon:"icon-add"}]}],initializeWidgetState:function(){this.activities=new d([],{displayName:this.userPreferences.get("displayName"),fetchSize:G,maxCount:1e3}),this.activityCount=new f({}),this.segmentOptionalFeature=new u({displayName:this.userPreferences.get("displayName")}),this.activityTypes=new v([]),this.eventTypes=new m([]),this.userBiometrics=b,this.userMapSetting=new a({key:"Map.Setting.Activities"}),this.mapProviderPreference=new c({key:"map_provider_type"}),this.segments=null,this.gears=0,this.stravaAccessInfo=new h([])},maxPage:function(){return parseInt(this.activityCount.get("nonMultisportCount"),10)+parseInt(this.activityCount.get("multisportParentCount"),10)-1},numLoadedPages:function(){return this.activities.length},getCurrentActivity:function(){return this.activities.at(this.getCurrentPageIndex())},fetchMore:function(){this.activities.once(d.Events.ACTIVITIES_FETCHED,t.bind(this.fetchMoreComplete,this)),this.activities.fetchMore()},provideDependencies:function(e){e.addModel({model:this.activities,required:!0}),e.addModel({model:this.activityCount,required:!0}),e.addModel({model:this.activityTypes,required:!0}),e.addModel({model:this.eventTypes,required:!0}),e.addModel({model:this.segmentOptionalFeature,required:!0}),e.addModel({model:this.userMapSetting,required:!0}),e.addModel({model:this.mapProviderPreference,required:!0,countError:!0}),e.addModel({model:this.stravaAccessInfo,required:!0})},onDependenciesLoaded:function(){this.currentWeightInKg=this.userBiometrics.getWeightInKg()},provideModels:function(e){if(this.activities.length==0)return null;this.segments&&(this.segments.off(),this.segments=null);var t=this.getCurrentActivity();return{activity:t.toJSON(),activityTypes:this.activityTypes.toJSONParentChild(),eventTypes:this.eventTypes.toJSON(),segments:this.segments?this.segments.toJSON():null,segmentsEnabled:this.segmentsAreEnabledForActivity(),activityTypeClassMapper:M,showGearIcon:this.showGearIcon(),gears:this.gears,isDivingActivity:this.isDivingActivity(t.get("activityType").typeKey),isApneaActivity:this.isApneaActivity(t.get("activityType").typeKey)}},formatFooter:function(e){return n.formatShortDate(this.activities.at(e).get("startTimeLocal"))},postRender:function(e){if(this.activities.length===0)return;this.unloadMap(),this.unloadChart(),this.unloadSegments();var t=this.activities.at(e);if(!t)return;this.isDivingActivity(t.get("activityType").typeKey)&&this.isNotApneaActivity(t.get("activityType").typeKey)?this.displayDiveLog(t):t.get("activityType").typeKey!=="strength_training"?this.displayActivityData(t):this.fetchRepCountingActivity(t),this.isDivingActivity(t.get("activityType").typeKey)&&(this.$(".widget-activity-event").hide(),this.$(".gear-trigger").hide()),t.get("parent")?this.displayChildren(t):this.isApneaActivity(t.get("activityType").typeKey)?this.displayApneaSession(t):t.get("hasPolyline")||t.has("startLatitude")&&t.has("startLongitude")&&t.has("endLatitude")&&t.has("endLongitude")?this.displayMap(t):this.displayHRChart(t),this.segmentsAreEnabledForActivity()&&(this.segmentsView=null,this.loadSegments(t)),this.showGearIcon()&&this.loadGears(t);var r={el:this.$(".js-activityNameEditPlaceholder"),value:t.get("activityName")||n.localize("untitled"),url:D.url("/activity/"+this.getCurrentActivity().id)};this.isDivingActivity(t.get("activityType").typeKey)&&this.isNotApneaActivity(t.get("activityType").typeKey)?(r.diveNumber=t.get("diveNumber")||"--",this.inlineEditView=new A(r)):this.inlineEditView=new k(r),this.inlineEditView.bind(k.Events.CHANGE,this.onActivityNameConfirmed,this),this.inlineEditView.render(),t.get("activityType").typeKey=="multi_sport"?(this.$(".widget-activity-type").html(n.localize("activity_type_"+t.get("activityType").typeKey)),this.$(".widget-activity-type").addClass("data-label")):(this.inlineActivityTypeDropDownListView=new L({el:this.$(".widget-activity-type"),items:j.formatActivityTypesForDropdownList(this.activityTypes),value:t.get("activityType").typeId,formatClass:"widget-activities-type"}),this.inlineActivityTypeDropDownListView.bind(L.Events.CHANGE,this.onActivityTypeChanged,this),this.inlineActivityTypeDropDownListView.render()),this.inlineEventTypeDropDownListView=new L({el:this.$(".widget-activity-event"),items:this.getEventTypesForDropDownList(),value:t.get("eventType").typeId,formatClass:"widget-activities-event"}),this.inlineEventTypeDropDownListView.bind(L.Events.CHANGE,this.onEventTypeChanged,this),this.inlineEventTypeDropDownListView.render()},getEventTypesForDropDownList:function(){var e=[];return this.eventTypes.each(function(t){var r=t.get("typeKey");r!="all"&&e.push({name:n.localize(r),value:t.get("typeId")})},this),e=t.sortBy(e,function(e){return e.name}),e},onActivityNameConfirmed:function(e,r){var i=["activityName"];e=jQuery.trim(e);if(e!=n.localize("untitled")){var s=this.getCurrentActivity();s.set("activityName",e),t.isUndefined(r)||(s.set("diveNumber",parseInt(r,10)),i.push("diveNumber"),this.inlineEditView.setDiveNumber(parseInt(r,10))),this.saveActivity(i)}this.inlineEditView.render()},onActivityTypeChanged:function(e){var t=this.activityTypes.findByTypeId(e);this.getCurrentActivity().set("activityType",t.toJSON()),this.getCurrentActivity().set("calories",this.autoCalcCalories()),this.saveActivity(["activityType","calories"]),this.setActivityTypeIcon(t)},setActivityTypeIcon:function(e){var n=this.$(".widget-activity-identifier"),r=n.attr("class").split(" ");t.each(r,function(e){e.substr(0,14)=="icon-activity-"&&n.removeClass(e)}),n.addClass("icon-activity-"+M.map(e.get("typeKey")))},autoCalcCalories:function(){var e=this.getCurrentActivity().get("calories");if(this.currentWeightInKg&&this.getCurrentActivity().get("autoCalcCalories")){var t=this.getCurrentActivity().get("activityType"),n=this.activityTypes.findByTypeKey(t.typeKey);if(n){var r=this.getCurrentActivity().get("duration")/3600,i=this.getCurrentActivity().get("distance"),s=Math.round(i/r*.000621371192*10)/10;e=Math.round(P.determineMETS(n.get("typeKey"),s)*this.currentWeightInKg*r),this.$("#js-calories").html(e)}}return e},onEventTypeChanged:function(e){var t=this.eventTypes.findByTypeId(e);this.getCurrentActivity().set("eventType",t.toJSON()),this.saveActivity(["eventType"])},displayMap:function(e){this.$(".map-container .widget-map").length===0&&this.$(".map-container").prepend('<div class="widget-map"></div>'),this.mapView=new x({model:this.model,mapContainerId:"map-container-"+(new Date).getTime(),mapContainerClass:"",useCustomMapControls:!0,width:320,height:200,disablePanning:!0,disableZooming:!0,enableBikeLanes:!1,userMapSetting:this.userMapSetting,viewerIsAuthenticated:!0,cursorStyle:"default",activityId:e.get("activityId"),el:this.$(".widget-map"),mapProvider:this.mapProvider}),this.mapView.render(),this.mapView.activityId=e.get("activityId"),this.mapControls=new N({mapView:this.mapView,userMapSetting:this.userMapSetting,el:this.$(".map-controls"),hideHeatMaps:this.isDivingActivity(e.get("activityType").typeKey)}),this.mapControls.once(N.Events.ON_MAP_PROVIDER_CHANGED,this.onMapViewProviderChanged,this),this.isDivingActivity(e.get("activityType").typeKey)&&this.isNotApneaActivity(e.get("activityType").typeKey)?(this.$(".widget-map").addClass("diving"),this.displayMarkersOnly(e)):this.displayPolyline(e)},displayPolyline:function(e){var t=new r({activityId:e.get("activityId")}),n=new O;n.addEvent({model:this.mapView,event:x.Events.ON_MAP_READY,required:!0}),n.addModel({model:t,required:!0});var i=this;n.bind(O.Events.SYNCHRONIZED,function(){i.onPolylineReadyToRender(t),i.updateOSMLogo()},this),this.mapView.loadMap(),n.fetchModels()},displayMarkersOnly:function(e){var t=new O;t.addEvent({model:this.mapView,event:x.Events.ON_MAP_READY,required:!0});var n=this;t.bind(O.Events.SYNCHRONIZED,function(){n.onMarkersReadyToRender(e),n.updateOSMLogo()},this),this.mapView.loadMap(),t.fetchModels()},displayApneaSession:function(e){var t=new O;this.activitySplits=new p([],{activityId:e.id}),t.addModel({model:this.activitySplits,required:!0}),this.listenTo(t,O.Events.SYNCHRONIZED,function(){var t=new J({el:this.$(".apnea-container"),dives:this.activitySplits.get("lapDTOs"),mapProvider:this.mapProvider,userMapSetting:this.userMapSetting,activityId:e.id});t.render()}),t.fetchModels()},onMarkersReadyToRender:function(e){var t=[{lat:e.get("startLatitude"),lon:e.get("startLongitude")},{lat:e.get("endLatitude"),lon:e.get("endLongitude")}];this.mapView.fitMapToPoints(t),this.mapView.addMarker(e.get("startLatitude"),e.get("startLongitude"),T.getStartMarkerOptions()),this.mapView.addMarker(e.get("endLatitude"),e.get("endLongitude"),T.getEndMarkerOptions())},updateOSMLogo:function(){this.mapView.mapProvider==Garmin.Map.Utils.PROVIDER_TYPE_OSM&&$(".questyLogo",this.mapView.$el).css({top:"160px"})},onMapViewProviderChanged:function(e){this.mapProvider=e,this.unloadMap(),this.displayMap(this.getCurrentActivity())},unloadMap:function(){this.mapView&&this.mapView.remove(),this.mapControls&&(this.mapControls.$el.off(),this.mapControls.off(),this.mapControls.$el.empty(),this.mapControls=null)},unloadChart:function(){this.HRChartView&&(this.HRChartView.off(),this.HRChartView.$el.empty(),this.HRChartView=null)},unloadSegments:function(){this.segments&&(this.segments.off(),this.segments=null)},segmentsAreEnabledForActivity:function(){var e=this.getCurrentActivity().get("activityType"),t=M.map(e.typeKey);return this.stravaAccessInfo&&this.stravaAccessInfo.get("userOptionType")===h.USER_OPTION_TYPES.OPT_IN?!1:this.segmentOptionalFeature.isOptedIn()&&(t=="cycling"||t=="running")&&this.getCurrentActivity().get("hasPolyline")},loadSegments:function(e){if(!this.segmentsAreEnabledForActivity())return;this.segments&&this.segments.off(),this.segments=new y([],{activityId:e.id}),this.segments.once("sync",function(){this.segments.length>0&&this.$(".segments-trigger .notification-count").text(this.segments.length).show(),this.$(".segments-trigger").show()},this),this.segments.fetch()},loadGears:function(e){this.gears=new w([],{criteria:{activityId:e.id}}),this.gears.once("sync",function(){this.updateGearNotificationIcon()},this),this.gears.fetch()},updateGearNotificationIcon:function(){var e=this.$(".gear-trigger .notification-count"),t=this.gears.models.length;t>0?e.text(t).show():e.hide()},displayActivityData:function(e,t,n){this.activityWidgetDataView=new X({el:this.$("#activity-data-placeholder"),activity:e.toJSON(),isApneaActivity:this.isApneaActivity(e.get("activityType").typeKey),isStrengthTrainingActivity:t,repCountingActivity:n,showSimpleStats:this.showSimpleStats()}),this.activityWidgetDataView.render()},displayDiveLog:function(e){var t=new V({el:this.$("#activity-data-placeholder"),surfaceInterval:e.get("surfaceInterval")/1e3,timeIn:e.get("startTimeLocal"),maxDepth:e.get("maxDepth")/100,avgDepth:e.get("averageDepth")/100,bottomTime:e.get("bottomTime"),isDecoDive:e.get("decoDive")});t.render()},showSimpleStats:function(){return this.getCurrentActivity().get("activityType").typeKey==="yoga"||this.getCurrentActivity().get("activityType").typeKey==="floor_climbing"},fetchRepCountingActivity:function(e){var t=this,n=new O,r=new l({activityId:e.get("activityId")});n.addModel({model:r,required:!0}),n.bind(O.Events.SYNCHRONIZED,function(){t.displayActivityData(e,!0,r)},this),n.bind(O.Events.SYNCHRONIZE_FAILED,function(){throw t.displayActivityData(e),"Request for data failed"},this),n.fetchModels()},displayHRChart:function(e){var t=new i({activityId:e.get("activityId")}),n=new O;n.addModel({model:t,required:!0});var r=this;n.bind(O.Events.SYNCHRONIZED,function(){r.onActivityDetailsReady(t)},this),n.fetchModels()},displayChildren:function(e){var t=new g([],{parentActivityId:e.get("activityId")}),n=new O;n.addModel({model:t,required:!0});var r=this;n.bind(O.Events.SYNCHRONIZED,function(){r.onActivityChildrenReady(t)},this),n.fetchModels()},onManualActivityAdded:function(e){var t=new o(e.toSummarizedActivityJSON());this.activities.add(t),this.moveToPage(this.activities.indexOf(t)),this.raiseApplicationEvent(F.ACTIVITY_ADDED,t)},onPolylineReadyToRender:function(e){var t=e.get("gPolyline");if(t&&this.mapView&&t.activityId==this.mapView.activityId){var n=[],r=Garmin.Map.Utils.decodeLine(t.encodedSamples);for(var i=0;i<r.length;i++){var s=r[i],o=new Garmin.Map.Point(s[0],s[1]);n.push(o)}this.mapView.addPolyline(n,{width:2}),this.mapView.fitMapToPoints(n),this.mapView.addMarker(t.startLat,t.startLon,T.getStartMarkerOptions()),this.mapView.addMarker(t.endLat,t.endLon,T.getEndMarkerOptions())}},onActivityDetailsReady:function(e){this.HRChartView=new I({model:e,el:this.$(".chart-heart-rate")}),this.HRChartView.render()},onActivityChildrenReady:function(e){var t=this.getCurrentActivity();this.ActivityWidgetMultisportView=new z({activity:t,activityChildren:e,activityTypes:this.activityTypes,el:this.$(".multisport-activity-placeholder")}),this.ActivityWidgetMultisportView.render()},saveActivity:function(e){var n=this.getCurrentActivity(),r=new s;r.set("activityId",n.get("activityId")),t.each(e,function(e){switch(e){case"favorite":r.set("metadataDTO",{favorite:n.get("favorite")});break;case"eventType":r.set("eventTypeDTO",n.get("eventType"));break;case"activityType":r.set("activityTypeDTO",n.get("activityType"));break;case"description":r.set("description",n.get("description"));break;case"activityName":r.set("activityName",n.get("activityName"));break;case"calories":r.set("summaryDTO",{calories:n.get("calories")});break;case"diveNumber":r.set("metadataDTO",{diveNumber:n.get("diveNumber")});break;default:throw"Update Activity - Unrecognized attribute"}}),r.once("sync",this.onActivitySaved,this),r.once("error",this.onActivitySaveFailure,this),r.save()},onFavoriteClicked:function(e){e.preventDefault();var t=this.getCurrentActivity();t.get("favorite")?(this.$(".activity-favorite").removeClass("active"),t.set("favorite",!1)):(this.$(".activity-favorite").addClass("active"),t.set("favorite",!0)),this.saveActivity(["favorite"])},onActivitySaved:function(){this.raiseApplicationEvent(F.ACTIVITY_CHANGED,this.getCurrentActivity())},onActivitySaveFailure:function(){alert(n.localize("error_saving_activity"))},onAddNoteClicked:function(e){e.preventDefault();if(this.isNoteOpen)this.closeWidgetSheet(),this.isNoteOpen=!1;else{this.isNoteOpen=!0;var t=new R({model:this.getCurrentActivity()});t.once(R.Events.SaveClicked,function(){this.saveActivity(["description"])},this),this.displaySheet(t,n.localize("notes"),"widget-sheet-bottom widget-sheet-activity-notes")}},onWidgetSheetClosed:function(){this.isNoteOpen=!1},onSegmentOptedInChanged:function(e){this.reload()},onSegmentsButtonClicked:function(e){e.preventDefault(),this.segmentsView===null&&(this.segmentsView=new U({collection:this.segments,activity:this.getCurrentActivity()})),this.displaySheet(this.segmentsView,n.localize("segments"),"widget-sheet widget-sheet-bottom widget-sheet-segments")},getConversationResourceId:function(){var e=this.getCurrentActivity();return typeof e!="undefined"&&e!=null?e.id:null},getConversationResourceIdOwner:function(){var e=this.getCurrentActivity();return typeof e!="undefined"&&e!=null?e.get("ownerId"):null},onAddButtonClicked:function(){var e=new s({}),t=new q({activityTypes:this.activityTypes,eventTypes:this.eventTypes,personalInformation:this.userBiometrics,model:e});t.bind(q.Events.ON_ACTIVITY_SAVED,this.onManualActivityAdded,this),this.displaySheet(t,n.localize("add_manual_activity"),"widget-sheet-top widget-sheet-add-activity")},onApplicationEventActivityAdded:function(e,t){if(e===this.widgetView)return;this.activities.add(t)},onApplicationEventActivityChanged:function(e,t){if(e==this.widgetView)return;var n=this.activities.get(t.get("activityId"));this.activities.remove(n),this.activities.add(t),this.render()},showGearIcon:function(){return this.getCurrentActivity().get("activityType").typeKey!=="multi_sport"},onGearButtonClicked:function(e){e.preventDefault();var t=this.getCurrentActivity(),r=this,i=function(e,i){var s=new W({collection:r.gears,availableGears:e,gearTypes:i,activityId:t.id});s.on(W.Events.UpdateGearCount,function(){r.updateGearNotificationIcon()}),r.displaySheet(s.render(),n.localize("label_gear"),"widget-sheet widget-sheet-bottom widget-sheet-gear")},s=new w([],{criteria:{availableGearDate:H.formatISODate(B.parseISO(t.get("startTimeLocal"))),userProfilePk:t.get("ownerId")}}),o=new E,u=new O;u.addModel({model:s,required:!0}),u.addModel({model:o,required:!0}),u.on(O.Events.SYNCHRONIZED,function(){i(s,o)},this),u.fetchModels()},isDivingActivity:function(e){return j.isDivingActivity(e)},isNotApneaActivity:function(e){return!j.isApneaDiving(e)},isApneaActivity:function(e){return j.isApneaDiving(e)}})}),define("text!widgets/activity/templates/activityList.html",[],function(){return'<table class="table activity-list">\n    <tbody>\n        <tr>\n            <th><%= Localizer.localize(\'activity\') %></th>\n            <th><%= Localizer.localize(\'date\') %></th>\n            <th><%= Localizer.localize(\'distance\') %></th>\n        </tr>\n\n        <% for (var i = startIndex; i <= endIndex; i++) {   %>\n        <%      var activity = activities[i];               %>\n        <%      var activityName = activity.activityName || Localizer.localize(\'untitled\'); %>\n            <tr>\n                <td class="column-1"><i class="icon-activity-<%= activityTypeClassMapper.map(activity.activityType.typeKey) %>"></i><a title="<%= activityName %>" class="colored activity-link" data-activityid="<%= activity.activityId %>" href="<%= url(\'/activity/\' + activity.activityId) %>"> <%= activityName %></a></td>\n                <td class="column-2"><%= DateFormatter.formatMonthDayYear(DateParser.parseISO(activity.startTimeLocal))\n                    %>\n                </td>\n                <td class="column-3"><%= Personalizer.personalizeDistance(activity.distance, activity.activityType.typeKey, activity.unitOfPoolLength) %> <%= Localizer.localize(Personalizer.getDistanceUnitKey(activity.activityType.typeKey, activity.distance, activity.unitOfPoolLength)) %></td>\n            </tr>\n        <% }                                                %>\n\n    </tbody>\n</table>'}),define("widgets/activity/states/ActivityListState",["underscore","localizer","models/activity/ActivityCount","models/activity/ActivitySummary","models/activity/SummarizedActivity","collections/profile/UserProfileActivities","collections/activity/ActivityTypes","collections/activity/EventTypes","models/user/ViewerUserBiometrics","constants/main/ApplicationEvents","utils/ActivityTypeCssClassMapper","utils/date/DateParser","utils/date/DateFormatter","views/main/WidgetStateView","widgets/activity/views/ManualEditView","text!widgets/activity/templates/activityList.html","text!widgets/activity/templates/noData.html"],function(e,t,n,r,i,s,o,u,a,f,l,c,h,p,d,v,m){var g=10;return p.extend({titleKeyName:"title_activities_widget_list",menuKeyName:"title_widget_list_view",headerUrl:"/activities",name:"activityList",stateClassName:"widget-large widget-activities",templateHtml:v,noDataTemplateHtml:m,navigationDirection:"right",events:{"click .no-data-add-activity":"onAddButtonClicked"},applicationEvents:{ACTIVITY_ADDED:"onApplicationEventActivityAdded",ACTIVITY_CHANGED:"onApplicationEventActivityChanged"},menuGroups:[{groupName:"activityMenu",menuItems:[{key:"add_manual_activity",handlerName:"onAddButtonClicked",index:0,icon:"icon-add"}]}],initializeWidgetState:function(){this.activities=new s([],{displayName:this.userPreferences.get("displayName"),fetchSize:g*3,maxCount:1e3}),this.activityCount=new n({}),this.activityTypes=new o([]),this.eventTypes=new u([]),this.userBiometrics=a},maxPage:function(){var e=parseInt(this.activityCount.get("nonMultisportCount"),10)+parseInt(this.activityCount.get("multisportParentCount"),10);return e>0?Math.ceil(e/g)-1:0},numLoadedPages:function(){return this.activities.length>0?Math.ceil(this.activities.length/g):0},getCurrentActivity:function(){return this.activities.at(this.getCurrentPageIndex())},fetchMore:function(){this.activities.once(s.Events.ACTIVITIES_FETCHED,e.bind(this.fetchMoreComplete,this)),this.activities.fetchMore()},provideDependencies:function(e){e.addModel({model:this.activities,required:!0}),e.addModel({model:this.activityCount,required:!0}),e.addModel({model:this.activityTypes,required:!0}),e.addModel({model:this.eventTypes,required:!0})},provideModels:function(e){if(this.activities.length==0)return null;var t=Math.min(this.activities.length-1,e*g),n=Math.min(this.activities.length-1,t+g-1);return{activities:this.activities.toJSON(),startIndex:t,endIndex:n,activityTypeClassMapper:l,DateParser:c,DateFormatter:h}},formatFooter:function(){var e=this.maxPage();return t.localize("pagination_footer",this.getCurrentPageIndex()+1,e+1)},onAddButtonClicked:function(){var e=new r({}),n=new d({activityTypes:this.activityTypes,eventTypes:this.eventTypes,model:e,personalInformation:this.userBiometrics});n.bind(d.Events.ON_ACTIVITY_SAVED,this.onManualActivityAdded,this),this.displaySheet(n,t.localize("add_manual_activity"),"widget-sheet-top widget-sheet-add-activity")},onManualActivityAdded:function(e){var t=new i(e.toSummarizedActivityJSON());this.activities.add(t),this.moveToPage(0),this.raiseApplicationEvent(f.ACTIVITY_ADDED,t)},onApplicationEventActivityAdded:function(e,t){if(e===this.widgetView)return;this.activities.add(t),this.render()},onApplicationEventActivityChanged:function(e,t){if(e===this.widgetView)return;var n=this.activities.get(t.get("activityId"));this.activities.remove(n),this.activities.add(t),this.render()}})}),define("widgets/activity/Activities",["views/main/WidgetView","widgets/activity/states/SmallState","widgets/activity/states/RecentActivityState","widgets/activity/states/ActivityListState"],function(e,t,n,r){return e.extend({viewStates:[{name:"large-state",views:[{name:"recentActivity",widgetStateView:n},{name:"activityList",widgetStateView:r}]},{name:"small-state",views:[{name:"recentActivity",widgetStateView:t}]}],propertyFiles:["/main/js/properties/userprofile/userprofile","/main/js/properties/activity_types/activity_types","/main/js/properties/event_types/event_types","/main/js/properties/activity-api/activity-api","/main/js/properties/units/units","/main/js/properties/map/map","/main/js/properties/gear_tracking/gear_tracking","/main/js/properties/activity/activity"]})});